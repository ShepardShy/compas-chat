{
  "resolvedId": "D:/Work/compas-chat/components/chat/DetailedInfo/AdditionalInfoModal/AdditionalInfoModal.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup lang=\"ts\">\r\n\r\nimport AppH3 from '~/components/ui/AppH3/AppH3.vue'\r\nimport { useUsersStore } from '~/store/users'\r\nimport { chatMenuItems, detailedInfoMenuItems } from '~/shared/const'\r\nimport type { ChatMenuType, DetailedInfoMenuItem } from '~/types/messages'\r\n\r\nimport MuteOffIcon from 'assets/icons/mute-off-icon.svg'\r\n\r\nimport PinIcon from 'assets/icons/pin-icon.svg'\r\nimport FileMessagesIcon from 'assets/icons/file-messages-icon.svg'\r\nimport LinkMessagesIcon from 'assets/icons/link-messages-icon.svg'\r\nimport ImageMessagesIcon from 'assets/icons/photo-messages-icon.svg'\r\nimport TextMessagesIcon from 'assets/icons/text-messages-icon.svg'\r\nimport VideoMessagesIcon from 'assets/icons/video-messages-icon.svg'\r\nimport VoiceMessagesIcon from 'assets/icons/voice-messages-icon.svg'\r\nimport DeleteIcon from 'assets/icons/delete-icon.svg'\r\nimport CloseIcon from 'assets/icons/close-icon.svg'\r\n\r\nimport ChatPhoto from '~/components/chat/ChatPhoto/ChatPhoto.vue'\r\nimport { useSettingsStore } from '~/store/settings'\r\nimport BackIcon from 'assets/icons/back-icon.svg'\r\n\r\nconst usersStore = useUsersStore()\r\nconst { openModalChatData } = storeToRefs(usersStore)\r\n\r\nconst settingsStore = useSettingsStore()\r\nconst { isMobileSize } = storeToRefs(settingsStore)\r\n\r\ninterface PropsType {\r\n  isDetailedModalOpen: boolean\r\n  isGroupChat: boolean\r\n}\r\n\r\nconst props = defineProps<PropsType>()\r\nconst { isDetailedModalOpen, isGroupChat } = toRefs(props)\r\n\r\nconst emit = defineEmits<{(emit: 'update:isDetailedModalOpen', value: boolean): void }>()\r\n\r\nconst chatFullName = computed<string>(() => {\r\n  if (isGroupChat.value) {\r\n    return openModalChatData.value?.title\r\n  }\r\n\r\n  if (openModalChatData.value.firstName) {\r\n    return openModalChatData.value?.firstName + ' ' + openModalChatData.value?.secondName\r\n  } else {\r\n    return openModalChatData.value?.secondName\r\n  }\r\n})\r\n\r\nconst chatMenuValues = computed(() => chatMenuItems.filter(item => item.action === 'pinChat' || item.action === 'muteChat'))\r\n\r\nconst onClickDoAction = async (menuItem: ChatMenuType) => {\r\n  switch (menuItem.action) {\r\n    case 'muteChat': {\r\n      await usersStore.toggleUserMuted(openModalChatData.value.id!)\r\n      break\r\n    }\r\n    case 'pinChat': {\r\n      await usersStore.togglePinUser(openModalChatData.value.id!)\r\n      break\r\n    }\r\n  }\r\n}\r\n\r\nconst showMenuItem = (menuItem: ChatMenuType) => {\r\n  // if (menuItem.action === 'pinChat') {\r\n  //   return !openModalChatData.value.isPinned ? menuItem.title : menuItem.alternativeTitle\r\n  // } else if (menuItem.action === 'muteChat') {\r\n  //   return !openModalChatData.value.isMutedOff ? menuItem.title : menuItem.alternativeTitle\r\n  // }\r\n\r\n  return menuItem.title\r\n}\r\n\r\nconst showModalMenuItemTitle = (item: DetailedInfoMenuItem) => {\r\n  switch (item.action) {\r\n    case 'text-messages': {\r\n      return setCorrectTitle(openModalChatData.value.totalTextMessages)\r\n    }\r\n    case 'images-messages': {\r\n      return setCorrectTitle(openModalChatData.value.totalPhotoMessages)\r\n    }\r\n\r\n    case 'video-messages': {\r\n      return setCorrectTitle(openModalChatData.value.totalVideoMessages)\r\n    }\r\n\r\n    case 'file-messages': {\r\n      return setCorrectTitle(openModalChatData.value.totalFileMessages)\r\n    }\r\n\r\n    case 'voice-messages': {\r\n      return setCorrectTitle(openModalChatData.value.totalVoiceMessages)\r\n    }\r\n\r\n    case 'link-messages': {\r\n      return setCorrectTitle(openModalChatData.value.totalLinksMessages)\r\n    }\r\n\r\n    case 'delete-messages': {\r\n      return item.titleOne\r\n    }\r\n  }\r\n\r\n  function setCorrectTitle (quantity: number) {\r\n    const lastDigit = quantity.toString().slice(-1)\r\n    if (+lastDigit === 1) {\r\n      return quantity + ' ' + item.titleOne\r\n    } else if (+lastDigit >= 2 && +lastDigit <= 4) {\r\n      return quantity + ' ' + item.titleTwo\r\n    } else {\r\n      return quantity + ' ' + item.titleThree\r\n    }\r\n  }\r\n}\r\n\r\nconst closeModal = () => {\r\n  emit('update:isDetailedModalOpen', !isDetailedModalOpen.value)\r\n  usersStore.$patch(state => state.chatIdForOpenModal = -1)\r\n}\r\n\r\nconst onClickDetailedInfoMenuItem = async (item: DetailedInfoMenuItem) => {\r\n  switch (item.action) {\r\n    case 'delete-messages': {\r\n      await usersStore.deleteChat(openModalChatData.value.id)\r\n      usersStore.$patch(state => state.chatIdForOpenModal = undefined)\r\n      break\r\n    }\r\n\r\n    default: {\r\n      detailedMenuActiveDataType.value = item.action\r\n    }\r\n  }\r\n}\r\n\r\nconst detailedMenuActiveDataType = ref()\r\n\r\nconst groupChatUsersTotal = computed(() => {\r\n  if (!openModalChatData.value?.users) return\r\n\r\n  const totalUsers = openModalChatData.value?.users.length\r\n  const lastDigit = toString().slice(-1)\r\n  if (+lastDigit === 1) {\r\n    return totalUsers + ' ' + 'участник'\r\n  } else if (+lastDigit >= 2 && +lastDigit <= 4) {\r\n    return totalUsers + ' ' + 'участника'\r\n  } else {\r\n    return totalUsers + ' ' + 'участников'\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n  <div class=\"add-info\">\r\n    <div\r\n      class=\"add-info__modal\"\r\n      :class=\"{\r\n        'add-info__modal_mobile':isMobileSize}\"\r\n    >\r\n      <BackIcon\r\n        v-if=\"isMobileSize\"\r\n        class=\"add-info__back-icon\"\r\n        @click=\"closeModal\"\r\n      />\r\n\r\n      <CloseIcon\r\n        v-if=\"!isMobileSize\"\r\n        class=\"add-info__close-icon\"\r\n        @click=\"closeModal\"\r\n      />\r\n\r\n      <AppH3\r\n        class=\"add-info__title\"\r\n        :class=\"{\r\n          'add-info__title_mobile': isMobileSize\r\n        }\"\r\n      >\r\n        Подробная информация\r\n      </AppH3>\r\n\r\n      <ChatPhoto\r\n        class=\"add-info__img\"\r\n        :user-id=\"openModalChatData.userId\"\r\n        :is-pinned=\"openModalChatData.isPinned\"\r\n        :is-active=\"openModalChatData.isActive\"\r\n        :photo=\"openModalChatData.photo\"\r\n        :chat-name=\"chatFullName\"\r\n        :is-group-chat=\"isGroupChat\"\r\n        :is-detailed-menu=\"true\"\r\n      />\r\n\r\n      <div\r\n        v-if=\"!isGroupChat\"\r\n        class=\"menu__active\"\r\n      >\r\n        {{ openModalChatData.isActive ? 'В сети' : 'Не в сети' }}\r\n      </div>\r\n\r\n      <div\r\n        v-if=\"!isGroupChat\"\r\n        class=\"menu__name\"\r\n      >\r\n        {{ chatFullName }}\r\n      </div>\r\n\r\n      <div\r\n        v-if=\"isGroupChat\"\r\n        class=\"menu__title\"\r\n      >\r\n        {{ chatFullName }}\r\n      </div>\r\n\r\n      <div\r\n        v-if=\"!isGroupChat\"\r\n        class=\"menu__position\"\r\n      >\r\n        {{ openModalChatData.position ?? '' }}\r\n      </div>\r\n\r\n      <div\r\n        v-if=\"isGroupChat\"\r\n        class=\"menu__participants\"\r\n      >\r\n        {{ groupChatUsersTotal }}\r\n      </div>\r\n\r\n      <div\r\n        v-for=\"(item,idx) in chatMenuValues\"\r\n        :key=\"item.title\"\r\n        class=\"menu__item\"\r\n        :class=\"{\r\n          'menu__item_last': idx === chatMenuValues.length - 1\r\n        }\"\r\n        @click=\"onClickDoAction(item)\"\r\n      >\r\n        <div\r\n          v-if=\"item.icon\"\r\n          class=\"menu__item-icon\"\r\n          :class=\"{\r\n            'menu__item-icon_not-selected': (item.action == 'muteChat' && !openModalChatData.isMutedOff) || (item.action == 'pinChat' && !openModalChatData.isPinned)\r\n          }\"\r\n        >\r\n          <MuteOffIcon\r\n            v-if=\"item.action == 'muteChat' && openModalChatData.isMutedOff\"\r\n            class=\"menu__item-img\"\r\n          />\r\n\r\n          <PinIcon\r\n            v-if=\"item.action == 'pinChat' && openModalChatData.isPinned\"\r\n            class=\"menu__item-img\"\r\n          />\r\n        </div>\r\n\r\n        {{ showMenuItem(item) }}\r\n      </div>\r\n\r\n      <div\r\n        v-for=\"(item, idx) in detailedInfoMenuItems\"\r\n        :key=\"item.action\"\r\n        class=\"details-menu__item\"\r\n        :class=\"{\r\n          'details-menu__item_first': idx === 0,\r\n          'details-menu__item_pre-last': idx === detailedInfoMenuItems.length - 2,\r\n          'details-menu__item_last': idx === detailedInfoMenuItems.length - 1,\r\n        }\"\r\n        @click=\"onClickDetailedInfoMenuItem(item)\"\r\n      >\r\n        <FileMessagesIcon v-if=\"item.icon === 'file-messages-icon'\" />\r\n        <VoiceMessagesIcon v-if=\"item.icon === 'voice-messages-icon'\" />\r\n        <TextMessagesIcon v-if=\"item.icon === 'text-messages-icon'\" />\r\n        <LinkMessagesIcon v-if=\"item.icon === 'link-messages-icon'\" />\r\n        <ImageMessagesIcon v-if=\"item.icon === 'images-messages-icon'\" />\r\n        <VideoMessagesIcon v-if=\"item.icon === 'video-messages-icon'\" />\r\n        <DeleteIcon v-if=\"item.icon === 'delete-icon'\" />\r\n\r\n        <div>{{ showModalMenuItemTitle(item) }}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n@use '~/assets/styles/_variables.scss' as variables;\r\n\r\n.add-info {\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1000;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.add-info__modal {\r\n  width: 400px;\r\n  background-color: variables.$color-white;\r\n  position: relative;\r\n  z-index: 1100;\r\n  padding-top: 25px;\r\n  padding-bottom: 25px;\r\n  border-radius: 15px;\r\n  border: 1px solid #979797;\r\n  overflow: hidden;\r\n}\r\n\r\n.add-info__modal_mobile {\r\n  width: 100%;\r\n  border: 1px solid transparent;\r\n  border-radius: 0;\r\n  height: 100%;\r\n}\r\n\r\n.add-info__back-icon {\r\n  height: 25px;\r\n  position: absolute;\r\n  top: 25px;\r\n  left: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.add-info__title {\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  color: variables.$color-black;\r\n  margin-bottom: 25px;\r\n  padding-left: 25px;\r\n  padding-right: 25px;\r\n}\r\n\r\n.add-info__title_mobile {\r\n  padding-left: 45px;\r\n}\r\n\r\n.menu__active {\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: variables.$color-dark-grey;\r\n  margin-bottom: 0px;\r\n  text-align: center;\r\n}\r\n\r\n.menu__name {\r\n  margin-bottom: 5px;\r\n  text-align: center;\r\n  font-size: 21px;\r\n  font-weight: 400;\r\n  text-decoration: underline;\r\n  color: variables.$color-active;\r\n}\r\n\r\n.menu__title {\r\n  margin-bottom: 5px;\r\n  text-align: center;\r\n  font-size: 21px;\r\n  font-weight: 400;\r\n  color: variables.$color-black;\r\n}\r\n\r\n.menu__position {\r\n  margin-bottom: 5px;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  color: variables.$color-dark-grey;\r\n}\r\n\r\n.menu__participants {\r\n  margin-bottom: 5px;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  color: variables.$color-dark-grey;\r\n}\r\n\r\n.add-info__img {\r\n  margin: 0 auto 10px;\r\n}\r\n\r\n.add-info__close-icon {\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n  cursor: pointer;\r\n  transition: 0.3s all;\r\n}\r\n\r\n.add-info__close-icon:hover {\r\n  scale: 1.1;\r\n}\r\n\r\n.menu__item {\r\n  padding: 10px 25px 10px 25px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  color: variables.$color-dark;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.menu__item_last {\r\n  padding: 10px 25px 20px 25px;\r\n}\r\n\r\n.menu__item-icon {\r\n  border-radius: 5px;\r\n  background-color: #0584fe;\r\n  width: 18px;\r\n  height: 18px;\r\n  margin: 1px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.menu__item-icon_not-selected {\r\n  background-color: transparent;\r\n  border: 1px solid #0584fe;\r\n}\r\n\r\n.menu__item-img {\r\n  transform: scale(0.7);\r\n  color: #fff;\r\n}\r\n\r\n.menu__item_active {\r\n  background-color: variables.$color-light-grey;\r\n}\r\n\r\n.menu__item:nth-of-type(1) {\r\n  border-radius: 7px 7px 0 0;\r\n}\r\n\r\n.details-menu__item {\r\n  padding: 10px 25px;\r\n  background-color: #f7f8fa;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  color: variables.$color-dark;\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: flex-start;\r\n  transition: 0.2s all;\r\n}\r\n\r\n.details-menu__item:not(:last-of-type):hover {\r\n  scale: 1.03;\r\n}\r\n\r\n.details-menu__item_first {\r\n  padding-top: 20px;\r\n}\r\n\r\n.details-menu__item_pre-last {\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.details-menu__item_last {\r\n  padding-top: 20px;\r\n  padding-bottom: 0;\r\n  color: variables.$color-red;\r\n  background-color: variables.$color-white;\r\n}\r\n</style>\r\n",
      "start": 1709273111577,
      "end": 1709273111711,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709273111711,
      "end": 1709273111711,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709273111711,
      "end": 1709273111711,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709273111711,
      "end": 1709273111711,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709273111711,
      "end": 1709273111711,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709273111711,
      "end": 1709273111711,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709273111711,
      "end": 1709273111711,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709273111711,
      "end": 1709273111711,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709273111711,
      "end": 1709273111711,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709273111711,
      "end": 1709273111711,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import _sfc_main from \"D:/Work/compas-chat/components/chat/DetailedInfo/AdditionalInfoModal/AdditionalInfoModal.vue?vue&type=script&setup=true&lang.ts\";\nexport * from \"D:/Work/compas-chat/components/chat/DetailedInfo/AdditionalInfoModal/AdditionalInfoModal.vue?vue&type=script&setup=true&lang.ts\";\nimport \"D:/Work/compas-chat/components/chat/DetailedInfo/AdditionalInfoModal/AdditionalInfoModal.vue?vue&type=style&index=0&scoped=bf34d35a&lang.scss\";\nimport { useSSRContext as __vite_useSSRContext } from \"vue\";\nconst _sfc_setup = _sfc_main.setup;\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext();\n  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(\"components/chat/DetailedInfo/AdditionalInfoModal/AdditionalInfoModal.vue\");\n  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;\n};\nimport _export_sfc from \"\\0plugin-vue:export-helper\";\nexport default /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-bf34d35a\"]]);\n",
      "start": 1709273111711,
      "end": 1709273111780,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709273111780,
      "end": 1709273111780,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273111780,
      "end": 1709273111780,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273111780,
      "end": 1709273111780,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709273111781,
      "end": 1709273111781,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709273111781,
      "end": 1709273111781,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709273111781,
      "end": 1709273111781,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273111781,
      "end": 1709273111781,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709273111781,
      "end": 1709273111781,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709273111782,
      "end": 1709273111782,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709273111782,
      "end": 1709273111782,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709273111782,
      "end": 1709273111782,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709273111782,
      "end": 1709273111782,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709273111782,
      "end": 1709273111782,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709273111782,
      "end": 1709273111782,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709273111782,
      "end": 1709273111782,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709273111782,
      "end": 1709273111782,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709273111783,
      "end": 1709273111783,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709273111783,
      "end": 1709273111783,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709273111783,
      "end": 1709273111785,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709273111783,
      "end": 1709273111785,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709273111785,
      "end": 1709273111785,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709273111785,
      "end": 1709273111785,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709273111785,
      "end": 1709273111785,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709273111785,
      "end": 1709273111785,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709273111785,
      "end": 1709273111785,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709273111785,
      "end": 1709273111785,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709273111785,
      "end": 1709273111785,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709273111785,
      "end": 1709273111786,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709273111786,
      "end": 1709273111786,
      "order": "normal"
    }
  ]
}
