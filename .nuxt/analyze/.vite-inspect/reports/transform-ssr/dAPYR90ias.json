{
  "resolvedId": "D:/Work/compas-chat/components/chat/GroupChat/GroupChat.vue?vue&type=style&index=0&scoped=9ec6cb8e&lang.scss",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "\r\n@import './GroupChat.scss';\r\n",
      "start": 1709273111753,
      "end": 1709273111753,
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/Work/compas-chat/components/chat/GroupChat/GroupChat.vue"
        ],
        "names": [],
        "mappings": ";AAwOA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC",
        "file": "D:/Work/compas-chat/components/chat/GroupChat/GroupChat.vue",
        "sourceRoot": "",
        "sourcesContent": [
          "<script setup lang=\"ts\">\r\nimport { useUsersStore } from '~/store/users'\r\nimport PinnedIcon from 'assets/icons/pin-icon.svg'\r\nimport ReceivedMessageIcon from 'assets/icons/recieved-message-icon.svg'\r\nimport MuteOffIcon from 'assets/icons/mute-off-icon.svg'\r\nimport ViewedMessageIcon from 'assets/icons/viewed-message-icon.svg'\r\nimport ChatPhoto from '~/components/chat/ChatPhoto/ChatPhoto.vue'\r\n\r\nimport GroupChatIcon from '~/assets/icons/group-chat-icon.svg'\r\n\r\nimport type { GroupChatMessageType, GroupChatType } from '~/types/messages'\r\nimport ChatMenu from '~/components/chat/ChatMenu/ChatMenu.vue'\r\nimport { getDistanceToViewport, messageTimeInfo } from '~/composables/chats'\r\nimport { useSettingsStore } from '~/store/settings'\r\n\r\ninterface PropsType {\r\n  chatData: GroupChatType\r\n}\r\n\r\nconst props = defineProps<PropsType>()\r\nconst { chatData } = toRefs(props)\r\n\r\nconst usersStore = useUsersStore()\r\nconst { openedChatId, userId, chatsWithPinnedUsers, chatIdForOpenModal } = storeToRefs(usersStore)\r\n\r\nconst settingsStore = useSettingsStore()\r\nconst { isMobileSize } = storeToRefs(settingsStore)\r\n\r\nconst isDetailedChatOpen = ref(false)\r\n\r\nconst lastMessage = computed<GroupChatMessageType | {}>(() => {\r\n  if (chatData.value.messages.length) {\r\n    return chatData.value.messages[chatData.value.messages.length - 1]\r\n  }\r\n\r\n  return {}\r\n})\r\nconst unreadMessagesLength = computed<number>(() => chatData.value.messages.filter(message => message.isUnread).length)\r\n\r\nconst isMessageReceived = computed<boolean>(() => {\r\n  return userId.value === lastMessage.value.userId &&\r\n      lastMessage.value.isReceived &&\r\n      !lastMessage.value.isViewed\r\n})\r\n\r\nconst isMessageViewed = computed<boolean>(() => {\r\n  return userId.value === lastMessage.value.userId &&\r\n      lastMessage.value.isViewed\r\n})\r\n\r\nconst unpinUser = async () => {\r\n  await usersStore.unpinUser(chatData.value.id)\r\n}\r\n\r\nconst toggleMute = async () => {\r\n  await usersStore.toggleUserMuted(chatData.value.id)\r\n}\r\n\r\nconst distanceToViewport = ref()\r\n\r\nconst onMouseClickUserChat = (event: MouseEvent) => {\r\n  const iconsComponents = [...document.querySelectorAll('.icon')]\r\n  const chatMenuComponent = [...document.querySelectorAll('.menu')]\r\n\r\n  // Чтобы при нажатии на иконку не открывалось меню, а срабатывало событие нажатия на иконку\r\n\r\n  if (!iconsComponents.includes(event.target.closest('.icon')) &&\r\n      !chatMenuComponent.includes(event.target.closest('.menu'))\r\n  ) {\r\n    if (event.button === 0) {\r\n      // при нажатии ЛКМ открыть чат\r\n      settingsStore.$patch(state => state.isChatsShown = false)\r\n      usersStore.$patch(state => state.openedChatId = chatData.value.id)\r\n    } else if (event.button === 2) {\r\n      //  при нажатии ПКМ открыть модалку для действий с диалогом пользователя\r\n      distanceToViewport.value = getDistanceToViewport(event.target)\r\n      isDetailedChatOpen.value = !isDetailedChatOpen.value\r\n    }\r\n  }\r\n}\r\n\r\nconst borderRadiusForActiveChat = computed(() => {\r\n  if (chatData.value.isPinned &&\r\n      chatsWithPinnedUsers.value[chatsWithPinnedUsers.value.length - 1].id === chatData.value.id) {\r\n    return '0 0 9px 9px'\r\n  } else if (chatData.value.isPinned &&\r\n      chatsWithPinnedUsers.value[0].id === chatData.value.id) {\r\n    return '9px 9px 0 0'\r\n  }\r\n\r\n  return '0'\r\n})\r\n\r\nuseEventListener(document, 'contextmenu', (event) => {\r\n  const elem = event.target.className\r\n\r\n  if (elem.includes('group')) {\r\n    event.preventDefault()\r\n  }\r\n})\r\n\r\nconst toggleMenuOpen = () => {\r\n  isDetailedChatOpen.value = !isDetailedChatOpen.value\r\n}\r\n\r\nconst $menuItem = ref()\r\n\r\n// onMounted(() => {\r\n//   if (chatIdForOpenModal.value === chatData.value.id) {\r\n//     distanceToViewport.value = getDistanceToViewport($menuItem.value).bottom\r\n//     isDetailedChatOpen.value = true\r\n//   }\r\n// })\r\n\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    ref=\"$menuItem\"\r\n    class=\"group\"\r\n    :class=\"{\r\n      'group__chat_open': openedChatId === chatData.id,\r\n    }\"\r\n    :style=\"{\r\n      'border-bottom': chatData.isPinned ? 'none' : 'solid 1px #eeeff1',\r\n      'borderRadius': borderRadiusForActiveChat,\r\n    }\"\r\n    @mousedown=\"onMouseClickUserChat($event)\"\r\n  >\r\n    <ChatPhoto\r\n      :is-pinned=\"chatData.isPinned\"\r\n      :is-group-chat=\"chatData.isGroupChat\"\r\n      :chat-name=\"chatData.title\"\r\n      :photo=\"chatData.photo\"\r\n      :user-id=\"chatData.id\"\r\n    />\r\n\r\n    <div class=\"group__data\">\r\n      <div class=\"group__info\">\r\n        <div class=\"group__title\">\r\n          <GroupChatIcon class=\"group__title-icon\" />\r\n\r\n          <div>{{ chatData.title }}</div>\r\n        </div>\r\n\r\n        <div class=\"group__message-status\">\r\n          <ViewedMessageIcon\r\n            v-if=\"isMessageViewed\"\r\n          />\r\n          <ReceivedMessageIcon\r\n            v-if=\"isMessageReceived\"\r\n          />\r\n\r\n          {{ messageTimeInfo(lastMessage) }}\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        v-if=\"!chatData.isTyping\"\r\n        class=\"group__last-message\"\r\n      >\r\n        <span v-if=\"lastMessage?.id && lastMessage?.userId === userId\">\r\n          <span class=\"group__user-message-last\"> Вы: </span>\r\n          {{ lastMessage.message }}\r\n        </span>\r\n        <span v-else>\r\n          <span class=\"group__user-message-last\">\r\n            {{ lastMessage.firstName + ' ' + lastMessage.secondName }}:\r\n          </span>\r\n          {{ lastMessage.message }}\r\n        </span>\r\n      </div>\r\n\r\n      <div\r\n        v-if=\"chatData.isTyping\"\r\n        class=\"group__is-typing\"\r\n      >\r\n        печатает\r\n\r\n        <span class=\"type__circles\">\r\n          <span class=\"type__circle\" />\r\n          <span class=\"type__circle\" />\r\n          <span class=\"type__circle\" />\r\n        </span>\r\n      </div>\r\n\r\n      <div class=\"group__chat-info icon\">\r\n        <MuteOffIcon\r\n          v-if=\"chatData.isMutedOff\"\r\n          class=\"user__muted icon\"\r\n          @click=\"toggleMute\"\r\n        />\r\n\r\n        <div\r\n          v-if=\"unreadMessagesLength\"\r\n          class=\"group__unread-msg\"\r\n        >\r\n          {{ unreadMessagesLength }}\r\n        </div>\r\n\r\n        <PinnedIcon\r\n          v-if=\"chatData.isPinned\"\r\n          class=\"group__pinned icon\"\r\n          @click=\"unpinUser\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!--    <div-->\r\n    <!--      v-if=\"isDetailedChatOpen\"-->\r\n    <!--      class=\"group__menu-bg\"-->\r\n    <!--      @click=\"toggleMenuOpen\"-->\r\n    <!--    />-->\r\n\r\n    <!--    <ChatMenu-->\r\n    <!--      v-if=\"isDetailedChatOpen\"-->\r\n    <!--      v-model:is-detailed-chat-open=\"isDetailedChatOpen\"-->\r\n    <!--      :style=\"{-->\r\n    <!--        top: distanceToViewport.bottom < 240 ? '-172px' : '30px',-->\r\n    <!--        right: '10px',-->\r\n    <!--      }\"-->\r\n    <!--      :chat-id=\"chatData.id\"-->\r\n    <!--      :is-pinned=\"chatData.isPinned\"-->\r\n    <!--      :is-muted-off=\"chatData.isMutedOff\"-->\r\n    <!--      :is-user-chat-left=\"true\"-->\r\n    <!--      :is-group-chat=\"chatData.isGroupChat\"-->\r\n    <!--      @close-chat=\"toggleMenuOpen\"-->\r\n    <!--    />-->\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n@import './GroupChat.scss';\r\n</style>\r\n"
        ]
      }
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709273111753,
      "end": 1709273111753,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709273111753,
      "end": 1709273111753,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709273111753,
      "end": 1709273111753,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709273111753,
      "end": 1709273111753,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709273111753,
      "end": 1709273111753,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "result": ".group{cursor:pointer;display:flex;gap:10px;padding:10px 15px;position:relative}.group__data{position:relative;width:calc(100% - 60px)}.group__info{display:flex;justify-content:space-between;margin-bottom:5px;width:100%}.group__title{align-items:flex-end;display:flex;font-size:16px;font-weight:400;gap:5px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:85%}.group__title-icon{transform:scale(.8)}.group__is-typing,.group__last-message,.group__message-status{color:#8f8f8f;font-size:12px;font-weight:400}.group__is-typing,.group__last-message{display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis;width:85%}.type__circle{animation:scaleAnimation 1.5s infinite;background-color:#8f8f8f;border-radius:3px;display:inline-block;height:3px;margin-right:2px;width:3px}.type__circle:nth-child(2){animation-delay:.5s}.type__circle:nth-child(3){animation-delay:1s}@keyframes scaleAnimation{0%{transform:scale(1)}50%{transform:scale(1.4)}to{transform:scale(1)}}.group__chat-info{align-items:center;bottom:0;display:flex;gap:10px;position:absolute;right:0}.group__muted,.group__pinned{cursor:pointer;height:15px}.group__unread-msg{background-color:#a6b7d4;border-radius:9px;color:#fff;font-size:12px;font-weight:400;padding:1px 5px}.group__chat_open{background-color:#eef3f9}.group__user-message-last{color:#000;font-weight:600}.icon{color:#a6b7d4}.group__menu-bg{background-color:transparent;bottom:0;left:0;position:fixed;right:0;top:0;z-index:20}",
      "start": 1709273111753,
      "end": 1709273111964,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": "D:/Work/compas-chat/components/chat/GroupChat/GroupChat.vue",
        "mappings": "AAEA,OAIE,eAHA,aACA,SACA,kBAEA,kBAGF,aAEE,kBADA,wBAIF,aAGE,aACA,8BAFA,kBADA,WAMF,cAQE,qBADA,aANA,eACA,gBAOA,QAJA,gBACA,uBAFA,mBADA,UASF,mBACE,oBASF,8DAJE,aChBgB,CDehB,eAEA,gBAGF,uCAKE,oBACA,qBACA,4BACA,gBACA,uBACA,UAGF,cAME,uCADA,wBCtCgB,CDqChB,kBAHA,qBAEA,WAIA,iBALA,UAQF,2BACE,oBAGF,2BACE,mBAGF,0BACE,GAAK,mBACL,IAAM,qBACN,GAAO,oBAGT,kBAKE,mBAHA,SAEA,aAEA,SALA,kBAEA,QAMF,6BAGE,eADA,YAIF,mBAME,wBCrFgB,CDiFhB,kBAEA,WADA,eAEA,gBAJA,gBAQF,kBACE,yBAGF,0BAEE,UCrGY,CDoGZ,gBAIF,MACE,cAGF,gBAOE,6BAHA,SACA,OAJA,eAKA,QAHA,MADA",
        "names": [],
        "sources": [
          "D:/Work/compas-chat/components/chat/GroupChat/GroupChat.scss",
          "D:/Work/compas-chat/assets/styles/_variables.scss"
        ],
        "sourcesContent": [
          null,
          null
        ]
      }
    },
    {
      "name": "vite:esbuild",
      "start": 1709273111965,
      "end": 1709273111965,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709273111965,
      "end": 1709273111965,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709273111965,
      "end": 1709273111965,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": ".group[data-v-9ec6cb8e]{cursor:pointer;display:flex;gap:10px;padding:10px 15px;position:relative}.group__data[data-v-9ec6cb8e]{position:relative;width:calc(100% - 60px)}.group__info[data-v-9ec6cb8e]{display:flex;justify-content:space-between;margin-bottom:5px;width:100%}.group__title[data-v-9ec6cb8e]{align-items:flex-end;display:flex;font-size:16px;font-weight:400;gap:5px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:85%}.group__title-icon[data-v-9ec6cb8e]{transform:scale(.8)}.group__is-typing[data-v-9ec6cb8e],.group__last-message[data-v-9ec6cb8e],.group__message-status[data-v-9ec6cb8e]{color:#8f8f8f;font-size:12px;font-weight:400}.group__is-typing[data-v-9ec6cb8e],.group__last-message[data-v-9ec6cb8e]{display:-webkit-box;-webkit-line-clamp:2;-webkit-box-orient:vertical;overflow:hidden;text-overflow:ellipsis;width:85%}.type__circle[data-v-9ec6cb8e]{animation:scaleAnimation-9ec6cb8e 1.5s infinite;background-color:#8f8f8f;border-radius:3px;display:inline-block;height:3px;margin-right:2px;width:3px}.type__circle[data-v-9ec6cb8e]:nth-child(2){animation-delay:.5s}.type__circle[data-v-9ec6cb8e]:nth-child(3){animation-delay:1s}@keyframes scaleAnimation-9ec6cb8e{0%{transform:scale(1)}50%{transform:scale(1.4)}to{transform:scale(1)}}.group__chat-info[data-v-9ec6cb8e]{align-items:center;bottom:0;display:flex;gap:10px;position:absolute;right:0}.group__muted[data-v-9ec6cb8e],.group__pinned[data-v-9ec6cb8e]{cursor:pointer;height:15px}.group__unread-msg[data-v-9ec6cb8e]{background-color:#a6b7d4;border-radius:9px;color:#fff;font-size:12px;font-weight:400;padding:1px 5px}.group__chat_open[data-v-9ec6cb8e]{background-color:#eef3f9}.group__user-message-last[data-v-9ec6cb8e]{color:#000;font-weight:600}.icon[data-v-9ec6cb8e]{color:#a6b7d4}.group__menu-bg[data-v-9ec6cb8e]{background-color:transparent;bottom:0;left:0;position:fixed;right:0;top:0;z-index:20}",
      "start": 1709273111965,
      "end": 1709273111967,
      "order": "normal",
      "sourcemaps": {
        "file": "D:/Work/compas-chat/components/chat/GroupChat/GroupChat.vue",
        "mappings": "AAAA,wBAAO,cAAc,CAAC,YAAY,CAAC,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,8BAAa,iBAAiB,CAAC,uBAAuB,CAAC,8BAAa,YAAY,CAAC,6BAA6B,CAAC,iBAAiB,CAAC,UAAU,CAAC,+BAAc,oBAAoB,CAAC,YAAY,CAAC,cAAc,CAAC,eAAe,CAAC,OAAO,CAAC,eAAe,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,SAAS,CAAC,oCAAmB,mBAAmB,CAAC,iHAA8D,aAAa,CAAC,cAAc,CAAC,eAAe,CAAC,yEAAuC,mBAAmB,CAAC,oBAAoB,CAAC,2BAA2B,CAAC,eAAe,CAAC,sBAAsB,CAAC,SAAS,CAAC,+BAAc,+CAAsC,CAAC,wBAAwB,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,UAAU,CAAC,gBAAgB,CAAC,SAAS,CAAC,4CAA2B,mBAAmB,CAAC,4CAA2B,kBAAkB,CAAC,mCAA0B,GAAG,kBAAkB,CAAC,IAAI,oBAAoB,CAAC,GAAG,kBAAkB,CAAC,CAAC,mCAAkB,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,+DAA6B,cAAc,CAAC,WAAW,CAAC,oCAAmB,wBAAwB,CAAC,iBAAiB,CAAC,UAAU,CAAC,cAAc,CAAC,eAAe,CAAC,eAAe,CAAC,mCAAkB,wBAAwB,CAAC,2CAA0B,UAAU,CAAC,eAAe,CAAC,uBAAM,aAAa,CAAC,iCAAgB,4BAA4B,CAAC,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU",
        "names": [],
        "sources": [
          "D:/Work/compas-chat/components/chat/GroupChat/GroupChat.vue"
        ],
        "sourcesContent": [
          null
        ],
        "version": 3
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709273111967,
      "end": 1709273111967,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273111967,
      "end": 1709273111967,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273111967,
      "end": 1709273111967,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709273111967,
      "end": 1709273111967,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709273111967,
      "end": 1709273111967,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709273111967,
      "end": 1709273111967,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273111967,
      "end": 1709273111967,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709273111967,
      "end": 1709273111968,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "result": "",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:build-html",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709273111968,
      "end": 1709273111968,
      "order": "normal"
    }
  ]
}
