{
  "resolvedId": "D:/Work/compas-chat/components/chat/DialogBody/DialogBody.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup lang=\"ts\">\r\nimport { nextTick } from 'vue'\r\nimport ChatInput from '~/components/chat/ui/ChatInput.vue'\r\nimport SendMsgIcon from '~/assets/icons/send-msg-icon.svg'\r\nimport MicrophoneIcon from '~/assets/icons/microphone-icon.svg'\r\nimport { useUsersStore } from '~/store/users'\r\nimport OwnMessage from '~/components/chat/OwnMessage/OwnMessage.vue'\r\nimport OtherMessage from '~/components/chat/OtherMessage/OtherMessage.vue'\r\nimport VoiceMessage from '~/components/chat/VoiceMessage/VoiceMessage.vue'\r\nimport { useSettingsStore } from '~/store/settings'\r\n\r\nconst usersStore = useUsersStore()\r\nconst { openedChatData, userId, openedChatId } = storeToRefs(usersStore)\r\n\r\nconst settingsStore = useSettingsStore()\r\nconst { isMobileSize } = storeToRefs(settingsStore)\r\n\r\nconst messageValue = ref<string>()\r\n\r\nconst messageType = ref<'text' | 'voice'>('text')\r\n\r\nconst setMessageType = () => {\r\n  // чтобы разделить срабатывание click и dbclick\r\n  clearTimeout(oneClickTimer)\r\n  clearTimeout(oneClickTimer - 1)\r\n\r\n  if (isMakingAVoiceMessage.value) return\r\n\r\n  if (messageType.value === 'text') {\r\n    messageType.value = 'voice'\r\n  } else if (messageType.value === 'voice') {\r\n    messageType.value = 'text'\r\n  }\r\n}\r\n\r\nconst $dialogBody = ref<HTMLDivElement>()\r\nconst $dialogWrapper = ref<HTMLDivElement>()\r\nconst $dialogActions = ref<HTMLDivElement>()\r\n\r\nconst isDialogBodyHeightsLessThenVH = ref(true)\r\n\r\nconst scrollToDialogWrapperBottom = () => {\r\n  $dialogWrapper.value.scrollTop = $dialogWrapper.value.scrollHeight\r\n}\r\n\r\nconst checkIfDialogBodyHeightsLessThenVH = async () => {\r\n  await nextTick()\r\n  const dialogBodyHeight = $dialogBody.value.offsetHeight\r\n  const dialogWrapperHeight = $dialogWrapper.value.offsetHeight\r\n\r\n  isDialogBodyHeightsLessThenVH.value = (dialogBodyHeight < dialogWrapperHeight)\r\n}\r\n\r\nconst isMakingAVoiceMessage = ref(false)\r\nconst voiceMessage = ref([])\r\nlet doNotSaveVoiceMessage = false\r\n\r\nconst setVoiceMessage = async (isStarted: boolean, cleanMessage: boolean = false) => {\r\n  if (cleanMessage) {\r\n    doNotSaveVoiceMessage = true\r\n  }\r\n\r\n  isMakingAVoiceMessage.value = isStarted\r\n  await startRecord()\r\n}\r\n\r\nlet chunks = []\r\nlet mediaRecorder = null\r\nlet audioBlob = null\r\nlet startTime\r\nconst messageDuration = ref(0)\r\nlet messageIntervalId\r\n\r\nasync function startRecord () {\r\n  if (!navigator.mediaDevices && !navigator.mediaDevices.getUserMedia) {\r\n    return console.warn('Not supported')\r\n  }\r\n\r\n  if (!mediaRecorder) {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: true\r\n      })\r\n      mediaRecorder = new MediaRecorder(stream)\r\n      mediaRecorder.start()\r\n\r\n      startTime = new Date().getTime()\r\n\r\n      mediaRecorder.ondataavailable = (e) => {\r\n        chunks.push(e.data)\r\n      }\r\n\r\n      messageIntervalId = setInterval(() => messageDuration.value = (new Date().getTime() - startTime) / 1000, 1000)\r\n\r\n      mediaRecorder.onstop = mediaRecorderStop\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  } else {\r\n    mediaRecorder.stop()\r\n    clearInterval(messageIntervalId)\r\n    messageDuration.value = 0\r\n  }\r\n}\r\n\r\nfunction mediaRecorderStop () {\r\n  audioBlob = new Blob(chunks, { type: 'audio/mp3' })\r\n  const src = URL.createObjectURL(audioBlob)\r\n\r\n  if (doNotSaveVoiceMessage) {\r\n    voiceMessage.value = []\r\n  } else {\r\n    voiceMessage.value = [src]\r\n  }\r\n\r\n  mediaRecorder = null\r\n  chunks = []\r\n}\r\n\r\nconst sendTextMessage = () => {\r\n}\r\n\r\nlet oneClickTimer\r\n\r\nconst handleMessage = () => {\r\n  oneClickTimer = setTimeout(() => {\r\n    if (messageType.value === 'text') {\r\n      sendTextMessage()\r\n    } else if (messageType.value === 'voice') {\r\n      if (isMakingAVoiceMessage.value) {\r\n        setVoiceMessage(false)\r\n      } else {\r\n        setVoiceMessage(true)\r\n      }\r\n    }\r\n  }, 300)\r\n}\r\n\r\nonMounted(async () => {\r\n  await checkIfDialogBodyHeightsLessThenVH()\r\n  scrollToDialogWrapperBottom()\r\n})\r\n\r\nwatch(\r\n  () => openedChatId.value,\r\n  async () => {\r\n    await checkIfDialogBodyHeightsLessThenVH()\r\n    scrollToDialogWrapperBottom()\r\n  }\r\n)\r\n\r\nconst checkIfLastOfSeveralMessages = (idx: string | number): boolean => {\r\n  const messages = openedChatData.value!.messages\r\n  if (messages[idx + 1]) {\r\n    return messages[idx].userId !== messages[idx + 1].userId\r\n  } else {\r\n    return true\r\n  }\r\n}\r\n\r\nconst deleteMessage = (messageIdx) => {\r\n  voiceMessage.value = voiceMessage.value.splice(messageIdx, -1)\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div\r\n    class=\"dialog\"\r\n    :class=\"{\r\n      'dialog_mobile': isMobileSize\r\n    }\"\r\n  >\r\n    <div\r\n      ref=\"$dialogWrapper\"\r\n      class=\"dialog__wrapper\"\r\n      :class=\"{\r\n        'dialog__wrapper_flex': isDialogBodyHeightsLessThenVH\r\n      }\"\r\n    >\r\n      <div\r\n        ref=\"$dialogBody\"\r\n        class=\"dialog__body\"\r\n      >\r\n        <div\r\n          v-for=\"(message, idx) in openedChatData.messages\"\r\n          :key=\"message.id\"\r\n          class=\"dialog__message\"\r\n          :style=\"{\r\n            alignSelf: message.userId == userId ? 'flex-end' : 'flex-start',\r\n            marginBottom: openedChatData.messages.length - 1 === idx && '5px'\r\n          }\"\r\n        >\r\n          <OwnMessage\r\n            v-if=\"message.userId === userId\"\r\n            :message=\"message\"\r\n            :last-of-several-msgs=\"checkIfLastOfSeveralMessages(idx)\"\r\n          />\r\n\r\n          <OtherMessage\r\n            v-else\r\n            :message=\"message\"\r\n            :last-of-several-msgs=\"checkIfLastOfSeveralMessages(idx)\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <VoiceMessage\r\n      v-if=\"voiceMessage.length\"\r\n      class=\"dialog__voice\"\r\n      :is-own-message=\"true\"\r\n      date=\"12:01:2024 14:15\"\r\n      :is-received=\"true\"\r\n      :is-viewed=\"true\"\r\n      :audio-message=\"voiceMessage[0]\"\r\n      @delete-message=\"deleteMessage(0)\"\r\n    />\r\n\r\n    <div\r\n      ref=\"$dialogActions\"\r\n      class=\"dialog__actions\"\r\n    >\r\n      <ChatInput\r\n        v-model:input-value=\"messageValue\"\r\n        class=\"dialog__input\"\r\n        placeholder=\"Напишите сообщение…\"\r\n        :add-documents=\"true\"\r\n        :is-making-a-voice-message=\"isMakingAVoiceMessage\"\r\n        :message-duration=\"messageDuration\"\r\n      />\r\n\r\n      <div\r\n        class=\"dialog__send-msg\"\r\n        :class=\"{\r\n          'dialog__send-msg_active': isMakingAVoiceMessage,\r\n        }\"\r\n        @dblclick=\"setMessageType\"\r\n        @click=\"handleMessage\"\r\n      >\r\n        <SendMsgIcon v-if=\"messageType === 'text' || isMakingAVoiceMessage\" />\r\n\r\n        <MicrophoneIcon v-if=\"messageType === 'voice' && !isMakingAVoiceMessage\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      v-if=\"isMakingAVoiceMessage\"\r\n      class=\"dialog__voice-bg\"\r\n      @click=\"setVoiceMessage(false, true)\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n@import './DialogBody.scss';\r\n</style>\r\n",
      "start": 1709273111337,
      "end": 1709273111453,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709273111453,
      "end": 1709273111453,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709273111453,
      "end": 1709273111453,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709273111453,
      "end": 1709273111453,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709273111453,
      "end": 1709273111453,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709273111453,
      "end": 1709273111453,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709273111453,
      "end": 1709273111453,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709273111453,
      "end": 1709273111453,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709273111453,
      "end": 1709273111453,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709273111453,
      "end": 1709273111453,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import _sfc_main from \"D:/Work/compas-chat/components/chat/DialogBody/DialogBody.vue?vue&type=script&setup=true&lang.ts\";\nexport * from \"D:/Work/compas-chat/components/chat/DialogBody/DialogBody.vue?vue&type=script&setup=true&lang.ts\";\nimport \"D:/Work/compas-chat/components/chat/DialogBody/DialogBody.vue?vue&type=style&index=0&scoped=f0b4b62e&lang.scss\";\nimport { useSSRContext as __vite_useSSRContext } from \"vue\";\nconst _sfc_setup = _sfc_main.setup;\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext();\n  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(\"components/chat/DialogBody/DialogBody.vue\");\n  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;\n};\nimport _export_sfc from \"\\0plugin-vue:export-helper\";\nexport default /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-f0b4b62e\"]]);\n",
      "start": 1709273111453,
      "end": 1709273111487,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709273111487,
      "end": 1709273111487,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273111487,
      "end": 1709273111487,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273111487,
      "end": 1709273111487,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709273111487,
      "end": 1709273111487,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709273111487,
      "end": 1709273111487,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709273111487,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709273111488,
      "end": 1709273111488,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709273111488,
      "end": 1709273111490,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709273111488,
      "end": 1709273111490,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709273111490,
      "end": 1709273111490,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709273111490,
      "end": 1709273111490,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709273111490,
      "end": 1709273111490,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709273111490,
      "end": 1709273111490,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709273111490,
      "end": 1709273111490,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709273111490,
      "end": 1709273111490,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709273111490,
      "end": 1709273111490,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709273111490,
      "end": 1709273111490,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709273111490,
      "end": 1709273111490,
      "order": "normal"
    }
  ]
}
