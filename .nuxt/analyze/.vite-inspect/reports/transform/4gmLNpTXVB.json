{
  "resolvedId": "D:/Work/compas-chat/composables/chats.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { daysOfWeek } from '~/shared/const'\r\nimport type { GroupChatMessageType } from '~/types/messages'\r\n\r\nexport const messageTimeInfo = (lastMessage: GroupChatMessageType | {}) => {\r\n  if (lastMessage?.id) {\r\n    const dateParts = lastMessage.date.slice(0, 10).split('.')\r\n    const date = new Date(dateParts[2], dateParts[1] - 1, dateParts[0])\r\n    const today = new Date()\r\n\r\n    const timeDiff = today.getTime() - date.getTime()\r\n    const oneDay = 24 * 60 * 60 * 1000\r\n    const diffDays = Math.floor(timeDiff / oneDay)\r\n\r\n    const dayOfWeek = daysOfWeek[date.getDay()]\r\n\r\n    if (date.setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0)) {\r\n      return lastMessage.date.slice(-5)\r\n    } else if (diffDays <= 7) {\r\n      return dayOfWeek\r\n    } else if (diffDays > 7) {\r\n      return lastMessage.date.slice(0, 5)\r\n    }\r\n  }\r\n\r\n  return ''\r\n}\r\n\r\nexport function getDistanceToViewport (element: unknown) {\r\n  const rect = element.getBoundingClientRect()\r\n  const distanceToTop = rect.top\r\n  const distanceToBottom = window.innerHeight - rect.bottom\r\n\r\n  return {\r\n    top: distanceToTop,\r\n    bottom: distanceToBottom\r\n  }\r\n}\r\n",
      "start": 1709273108015,
      "end": 1709273108155,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709273108155,
      "end": 1709273108155,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709273108155,
      "end": 1709273108156,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709273108156,
      "end": 1709273108156,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709273108156,
      "end": 1709273108156,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { daysOfWeek } from \"~/shared/const\";\nexport const messageTimeInfo = (lastMessage) => {\n  if (lastMessage?.id) {\n    const dateParts = lastMessage.date.slice(0, 10).split(\".\");\n    const date = new Date(dateParts[2], dateParts[1] - 1, dateParts[0]);\n    const today = /* @__PURE__ */ new Date();\n    const timeDiff = today.getTime() - date.getTime();\n    const oneDay = 24 * 60 * 60 * 1e3;\n    const diffDays = Math.floor(timeDiff / oneDay);\n    const dayOfWeek = daysOfWeek[date.getDay()];\n    if (date.setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0)) {\n      return lastMessage.date.slice(-5);\n    } else if (diffDays <= 7) {\n      return dayOfWeek;\n    } else if (diffDays > 7) {\n      return lastMessage.date.slice(0, 5);\n    }\n  }\n  return \"\";\n};\nexport function getDistanceToViewport(element) {\n  const rect = element.getBoundingClientRect();\n  const distanceToTop = rect.top;\n  const distanceToBottom = window.innerHeight - rect.bottom;\n  return {\n    top: distanceToTop,\n    bottom: distanceToBottom\n  };\n}\n",
      "start": 1709273108156,
      "end": 1709273108191,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/Work/compas-chat/composables/chats.ts"
        ],
        "sourcesContent": [
          "import { daysOfWeek } from '~/shared/const'\r\nimport type { GroupChatMessageType } from '~/types/messages'\r\n\r\nexport const messageTimeInfo = (lastMessage: GroupChatMessageType | {}) => {\r\n  if (lastMessage?.id) {\r\n    const dateParts = lastMessage.date.slice(0, 10).split('.')\r\n    const date = new Date(dateParts[2], dateParts[1] - 1, dateParts[0])\r\n    const today = new Date()\r\n\r\n    const timeDiff = today.getTime() - date.getTime()\r\n    const oneDay = 24 * 60 * 60 * 1000\r\n    const diffDays = Math.floor(timeDiff / oneDay)\r\n\r\n    const dayOfWeek = daysOfWeek[date.getDay()]\r\n\r\n    if (date.setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0)) {\r\n      return lastMessage.date.slice(-5)\r\n    } else if (diffDays <= 7) {\r\n      return dayOfWeek\r\n    } else if (diffDays > 7) {\r\n      return lastMessage.date.slice(0, 5)\r\n    }\r\n  }\r\n\r\n  return ''\r\n}\r\n\r\nexport function getDistanceToViewport (element: unknown) {\r\n  const rect = element.getBoundingClientRect()\r\n  const distanceToTop = rect.top\r\n  const distanceToBottom = window.innerHeight - rect.bottom\r\n\r\n  return {\r\n    top: distanceToTop,\r\n    bottom: distanceToBottom\r\n  }\r\n}\r\n"
        ],
        "mappings": "AAAA,SAAS,kBAAkB;AAGpB,aAAM,kBAAkB,CAAC,gBAA2C;AACzE,MAAI,aAAa,IAAI;AACnB,UAAM,YAAY,YAAY,KAAK,MAAM,GAAG,EAAE,EAAE,MAAM,GAAG;AACzD,UAAM,OAAO,IAAI,KAAK,UAAU,CAAC,GAAG,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;AAClE,UAAM,QAAQ,oBAAI,KAAK;AAEvB,UAAM,WAAW,MAAM,QAAQ,IAAI,KAAK,QAAQ;AAChD,UAAM,SAAS,KAAK,KAAK,KAAK;AAC9B,UAAM,WAAW,KAAK,MAAM,WAAW,MAAM;AAE7C,UAAM,YAAY,WAAW,KAAK,OAAO,CAAC;AAE1C,QAAI,KAAK,SAAS,GAAG,GAAG,GAAG,CAAC,MAAM,MAAM,SAAS,GAAG,GAAG,GAAG,CAAC,GAAG;AAC5D,aAAO,YAAY,KAAK,MAAM,EAAE;AAAA,IAClC,WAAW,YAAY,GAAG;AACxB,aAAO;AAAA,IACT,WAAW,WAAW,GAAG;AACvB,aAAO,YAAY,KAAK,MAAM,GAAG,CAAC;AAAA,IACpC;AAAA,EACF;AAEA,SAAO;AACT;AAEO,gBAAS,sBAAuB,SAAkB;AACvD,QAAM,OAAO,QAAQ,sBAAsB;AAC3C,QAAM,gBAAgB,KAAK;AAC3B,QAAM,mBAAmB,OAAO,cAAc,KAAK;AAEnD,SAAO;AAAA,IACL,KAAK;AAAA,IACL,QAAQ;AAAA,EACV;AACF;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1709273108191,
      "end": 1709273108191,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709273108191,
      "end": 1709273108191,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709273108191,
      "end": 1709273108191,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709273108191,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709273108192,
      "end": 1709273108192,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709273108192,
      "end": 1709273108193,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709273108193,
      "end": 1709273108193,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709273108193,
      "end": 1709273108193,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709273108193,
      "end": 1709273108193,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709273108193,
      "end": 1709273108193,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709273108193,
      "end": 1709273108193,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709273108193,
      "end": 1709273108193,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709273108193,
      "end": 1709273108193,
      "order": "normal"
    }
  ]
}
