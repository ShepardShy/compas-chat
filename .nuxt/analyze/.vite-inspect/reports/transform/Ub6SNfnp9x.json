{
  "resolvedId": "D:/Work/compas-chat/components/chat/ChatWindowDialogData/ChatWindowDialogData.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-20ceba7f\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"window__user-data\" }\nconst _hoisted_2 = { class: \"user__user-data\" }\nconst _hoisted_3 = { class: \"user__name\" }\nconst _hoisted_4 = {\n  key: 1,\n  class: \"user__status\"\n}\nconst _hoisted_5 = {\n  key: 0,\n  class: \"user__position\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"user__chat-users\"\n}\n\nimport GroupChatIcon from 'assets/icons/group-chat-icon.svg'\r\nimport UserPhoto from '~/components/chat/ChatPhoto/ChatPhoto.vue'\r\n\r\nimport { useUsersStore } from '~/store/users'\r\nimport { useSettingsStore } from '~/store/settings'\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ChatWindowDialogData',\n  setup(__props) {\n\r\nconst usersStore = useUsersStore()\r\nconst { openedChatData } = storeToRefs(usersStore)\r\n\r\nconst settingsStore = useSettingsStore()\r\nconst { isMobileSize } = storeToRefs(settingsStore)\r\n\r\nconst userFullName = computed<string>(() => {\r\n  if (openedChatData.value.isGroupChat) {\r\n    return openedChatData.value.title\r\n  } else if (openedChatData.value.firstName) {\r\n    return openedChatData.value?.firstName + ' ' + openedChatData.value?.secondName\r\n  } else {\r\n    return openedChatData.value?.secondName\r\n  }\r\n})\r\n\r\nconst setUsersQuantity = computed(() => {\r\n  const totalChatUsers = openedChatData.value.users?.length.toString()\r\n\r\n  if (totalChatUsers.slice(-1) === 1) {\r\n    return `${totalChatUsers} участник`\r\n  } else if ([2, 3, 4].includes(+totalChatUsers.slice(-1))) {\r\n    return `${totalChatUsers} участника`\r\n  } else {\r\n    return `${totalChatUsers} участников`\r\n  }\r\n}\r\n)\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(UserPhoto, {\n      \"is-pinned\": _unref(openedChatData).isPinned,\n      photo: _unref(openedChatData).photo,\n      \"is-active\": _unref(openedChatData).isActive,\n      \"chat-name\": _unref(userFullName),\n      \"user-id\": _unref(openedChatData).id,\n      \"is-group-chat\": _unref(openedChatData).isGroupChat,\n      \"is-open-dialog-image\": true\n    }, null, 8, [\"is-pinned\", \"photo\", \"is-active\", \"chat-name\", \"user-id\", \"is-group-chat\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"user__name-status\", {\r\n          'user__name-status_mobile': _unref(isMobileSize)\r\n        }])\n      }, [\n        (_unref(openedChatData).isGroupChat)\n          ? (_openBlock(), _createBlock(_unref(GroupChatIcon), {\n              key: 0,\n              class: \"group__title-icon\"\n            }))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", _hoisted_3, _toDisplayString(_unref(userFullName)), 1),\n        (!_unref(openedChatData).isGroupChat)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_unref(openedChatData).isActive ? 'В сети' : 'Не в сети'), 1))\n          : _createCommentVNode(\"\", true)\n      ], 2),\n      (!_unref(openedChatData).isGroupChat)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString(_unref(openedChatData).position ?? ''), 1))\n        : _createCommentVNode(\"\", true),\n      (_unref(openedChatData).isGroupChat)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(_unref(setUsersQuantity)), 1))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})",
      "start": 1709273107262,
      "end": 1709273107262
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709273107262,
      "end": 1709273107262,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709273107262,
      "end": 1709273107262,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709273107262,
      "end": 1709273107262,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709273107262,
      "end": 1709273107262,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-20ceba7f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"window__user-data\" };\nconst _hoisted_2 = { class: \"user__user-data\" };\nconst _hoisted_3 = { class: \"user__name\" };\nconst _hoisted_4 = {\n  key: 1,\n  class: \"user__status\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"user__position\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"user__chat-users\"\n};\nimport GroupChatIcon from \"assets/icons/group-chat-icon.svg\";\nimport UserPhoto from \"~/components/chat/ChatPhoto/ChatPhoto.vue\";\nimport { useUsersStore } from \"~/store/users\";\nimport { useSettingsStore } from \"~/store/settings\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ChatWindowDialogData\",\n  setup(__props) {\n    const usersStore = useUsersStore();\n    const { openedChatData } = storeToRefs(usersStore);\n    const settingsStore = useSettingsStore();\n    const { isMobileSize } = storeToRefs(settingsStore);\n    const userFullName = computed(() => {\n      if (openedChatData.value.isGroupChat) {\n        return openedChatData.value.title;\n      } else if (openedChatData.value.firstName) {\n        return openedChatData.value?.firstName + \" \" + openedChatData.value?.secondName;\n      } else {\n        return openedChatData.value?.secondName;\n      }\n    });\n    const setUsersQuantity = computed(\n      () => {\n        const totalChatUsers = openedChatData.value.users?.length.toString();\n        if (totalChatUsers.slice(-1) === 1) {\n          return `${totalChatUsers} участник`;\n        } else if ([2, 3, 4].includes(+totalChatUsers.slice(-1))) {\n          return `${totalChatUsers} участника`;\n        } else {\n          return `${totalChatUsers} участников`;\n        }\n      }\n    );\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createVNode(UserPhoto, {\n          \"is-pinned\": _unref(openedChatData).isPinned,\n          photo: _unref(openedChatData).photo,\n          \"is-active\": _unref(openedChatData).isActive,\n          \"chat-name\": _unref(userFullName),\n          \"user-id\": _unref(openedChatData).id,\n          \"is-group-chat\": _unref(openedChatData).isGroupChat,\n          \"is-open-dialog-image\": true\n        }, null, 8, [\"is-pinned\", \"photo\", \"is-active\", \"chat-name\", \"user-id\", \"is-group-chat\"]),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"user__name-status\", {\n              \"user__name-status_mobile\": _unref(isMobileSize)\n            }])\n          }, [\n            _unref(openedChatData).isGroupChat ? (_openBlock(), _createBlock(_unref(GroupChatIcon), {\n              key: 0,\n              class: \"group__title-icon\"\n            })) : _createCommentVNode(\"\", true),\n            _createElementVNode(\"div\", _hoisted_3, _toDisplayString(_unref(userFullName)), 1),\n            !_unref(openedChatData).isGroupChat ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_unref(openedChatData).isActive ? \"В сети\" : \"Не в сети\"), 1)) : _createCommentVNode(\"\", true)\n          ], 2),\n          !_unref(openedChatData).isGroupChat ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString(_unref(openedChatData).position ?? \"\"), 1)) : _createCommentVNode(\"\", true),\n          _unref(openedChatData).isGroupChat ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(_unref(setUsersQuantity)), 1)) : _createCommentVNode(\"\", true)\n        ])\n      ]);\n    };\n  }\n});\n",
      "start": 1709273107266,
      "end": 1709273107291,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/Work/compas-chat/components/chat/ChatWindowDialogData/ChatWindowDialogData.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-20ceba7f\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"window__user-data\" }\nconst _hoisted_2 = { class: \"user__user-data\" }\nconst _hoisted_3 = { class: \"user__name\" }\nconst _hoisted_4 = {\n  key: 1,\n  class: \"user__status\"\n}\nconst _hoisted_5 = {\n  key: 0,\n  class: \"user__position\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"user__chat-users\"\n}\n\nimport GroupChatIcon from 'assets/icons/group-chat-icon.svg'\r\nimport UserPhoto from '~/components/chat/ChatPhoto/ChatPhoto.vue'\r\n\r\nimport { useUsersStore } from '~/store/users'\r\nimport { useSettingsStore } from '~/store/settings'\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ChatWindowDialogData',\n  setup(__props) {\n\r\nconst usersStore = useUsersStore()\r\nconst { openedChatData } = storeToRefs(usersStore)\r\n\r\nconst settingsStore = useSettingsStore()\r\nconst { isMobileSize } = storeToRefs(settingsStore)\r\n\r\nconst userFullName = computed<string>(() => {\r\n  if (openedChatData.value.isGroupChat) {\r\n    return openedChatData.value.title\r\n  } else if (openedChatData.value.firstName) {\r\n    return openedChatData.value?.firstName + ' ' + openedChatData.value?.secondName\r\n  } else {\r\n    return openedChatData.value?.secondName\r\n  }\r\n})\r\n\r\nconst setUsersQuantity = computed(() => {\r\n  const totalChatUsers = openedChatData.value.users?.length.toString()\r\n\r\n  if (totalChatUsers.slice(-1) === 1) {\r\n    return `${totalChatUsers} участник`\r\n  } else if ([2, 3, 4].includes(+totalChatUsers.slice(-1))) {\r\n    return `${totalChatUsers} участника`\r\n  } else {\r\n    return `${totalChatUsers} участников`\r\n  }\r\n}\r\n)\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(UserPhoto, {\n      \"is-pinned\": _unref(openedChatData).isPinned,\n      photo: _unref(openedChatData).photo,\n      \"is-active\": _unref(openedChatData).isActive,\n      \"chat-name\": _unref(userFullName),\n      \"user-id\": _unref(openedChatData).id,\n      \"is-group-chat\": _unref(openedChatData).isGroupChat,\n      \"is-open-dialog-image\": true\n    }, null, 8, [\"is-pinned\", \"photo\", \"is-active\", \"chat-name\", \"user-id\", \"is-group-chat\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"user__name-status\", {\r\n          'user__name-status_mobile': _unref(isMobileSize)\r\n        }])\n      }, [\n        (_unref(openedChatData).isGroupChat)\n          ? (_openBlock(), _createBlock(_unref(GroupChatIcon), {\n              key: 0,\n              class: \"group__title-icon\"\n            }))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", _hoisted_3, _toDisplayString(_unref(userFullName)), 1),\n        (!_unref(openedChatData).isGroupChat)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_unref(openedChatData).isActive ? 'В сети' : 'Не в сети'), 1))\n          : _createCommentVNode(\"\", true)\n      ], 2),\n      (!_unref(openedChatData).isGroupChat)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString(_unref(openedChatData).position ?? ''), 1))\n        : _createCommentVNode(\"\", true),\n      (_unref(openedChatData).isGroupChat)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(_unref(setUsersQuantity)), 1))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,SAAS,QAAQ,eAAe,cAAc,aAAa,YAAY,eAAe,cAAc,sBAAsB,qBAAqB,mBAAmB,kBAAkB,sBAAsB,qBAAqB,sBAAsB,qBAAqB,kBAAkB,iBAAiB,eAAe,cAAc,cAAc,mBAAmB;AAEpX,MAAM,eAAe,QAAM,aAAa,iBAAiB,GAAE,IAAE,EAAE,GAAE,YAAY,GAAE;AAC/E,MAAM,aAAa,EAAE,OAAO,oBAAoB;AAChD,MAAM,aAAa,EAAE,OAAO,kBAAkB;AAC9C,MAAM,aAAa,EAAE,OAAO,aAAa;AACzC,MAAM,aAAa;AAAA,EACjB,KAAK;AAAA,EACL,OAAO;AACT;AACA,MAAM,aAAa;AAAA,EACjB,KAAK;AAAA,EACL,OAAO;AACT;AACA,MAAM,aAAa;AAAA,EACjB,KAAK;AAAA,EACL,OAAO;AACT;AAEA,OAAO,mBAAmB;AAC1B,OAAO,eAAe;AAEtB,SAAS,qBAAqB;AAC9B,SAAS,wBAAwB;AAGjC,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,MAAM,SAAS;AAEjB,UAAM,aAAa,cAAc;AACjC,UAAM,EAAE,eAAe,IAAI,YAAY,UAAU;AAEjD,UAAM,gBAAgB,iBAAiB;AACvC,UAAM,EAAE,aAAa,IAAI,YAAY,aAAa;AAElD,UAAM,eAAe,SAAiB,MAAM;AAC1C,UAAI,eAAe,MAAM,aAAa;AACpC,eAAO,eAAe,MAAM;AAAA,MAC9B,WAAW,eAAe,MAAM,WAAW;AACzC,eAAO,eAAe,OAAO,YAAY,MAAM,eAAe,OAAO;AAAA,MACvE,OAAO;AACL,eAAO,eAAe,OAAO;AAAA,MAC/B;AAAA,IACF,CAAC;AAED,UAAM,mBAAmB;AAAA,MAAS,MAAM;AACtC,cAAM,iBAAiB,eAAe,MAAM,OAAO,OAAO,SAAS;AAEnE,YAAI,eAAe,MAAM,EAAE,MAAM,GAAG;AAClC,iBAAO,GAAG,cAAc;AAAA,QAC1B,WAAW,CAAC,GAAG,GAAG,CAAC,EAAE,SAAS,CAAC,eAAe,MAAM,EAAE,CAAC,GAAG;AACxD,iBAAO,GAAG,cAAc;AAAA,QAC1B,OAAO;AACL,iBAAO,GAAG,cAAc;AAAA,QAC1B;AAAA,MACF;AAAA,IACA;AAGA,WAAO,CAAC,MAAU,WAAgB;AAChC,aAAQ,WAAW,GAAG,oBAAoB,OAAO,YAAY;AAAA,QAC3D,aAAa,WAAW;AAAA,UACtB,aAAa,OAAO,cAAc,EAAE;AAAA,UACpC,OAAO,OAAO,cAAc,EAAE;AAAA,UAC9B,aAAa,OAAO,cAAc,EAAE;AAAA,UACpC,aAAa,OAAO,YAAY;AAAA,UAChC,WAAW,OAAO,cAAc,EAAE;AAAA,UAClC,iBAAiB,OAAO,cAAc,EAAE;AAAA,UACxC,wBAAwB;AAAA,QAC1B,GAAG,MAAM,GAAG,CAAC,aAAa,SAAS,aAAa,aAAa,WAAW,eAAe,CAAC;AAAA,QACxF,oBAAoB,OAAO,YAAY;AAAA,UACrC,oBAAoB,OAAO;AAAA,YACzB,OAAO,gBAAgB,CAAC,qBAAqB;AAAA,cAC3C,4BAA4B,OAAO,YAAY;AAAA,YACjD,CAAC,CAAC;AAAA,UACJ,GAAG;AAAA,YACA,OAAO,cAAc,EAAE,eACnB,WAAW,GAAG,aAAa,OAAO,aAAa,GAAG;AAAA,cACjD,KAAK;AAAA,cACL,OAAO;AAAA,YACT,CAAC,KACD,oBAAoB,IAAI,IAAI;AAAA,YAChC,oBAAoB,OAAO,YAAY,iBAAiB,OAAO,YAAY,CAAC,GAAG,CAAC;AAAA,YAC/E,CAAC,OAAO,cAAc,EAAE,eACpB,WAAW,GAAG,oBAAoB,OAAO,YAAY,iBAAiB,OAAO,cAAc,EAAE,WAAW,WAAW,WAAW,GAAG,CAAC,KACnI,oBAAoB,IAAI,IAAI;AAAA,UAClC,GAAG,CAAC;AAAA,UACH,CAAC,OAAO,cAAc,EAAE,eACpB,WAAW,GAAG,oBAAoB,OAAO,YAAY,iBAAiB,OAAO,cAAc,EAAE,YAAY,EAAE,GAAG,CAAC,KAChH,oBAAoB,IAAI,IAAI;AAAA,UAC/B,OAAO,cAAc,EAAE,eACnB,WAAW,GAAG,oBAAoB,OAAO,YAAY,iBAAiB,OAAO,gBAAgB,CAAC,GAAG,CAAC,KACnG,oBAAoB,IAAI,IAAI;AAAA,QAClC,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1709273107291,
      "end": 1709273107291,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709273107293,
      "end": 1709273107293,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709273107293,
      "end": 1709273107293,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { storeToRefs } from 'D:/Work/compas-chat/node_modules/@pinia/nuxt/dist/runtime/composables';\nimport { computed } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = (n) => (_pushScopeId(\"data-v-20ceba7f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = { class: \"window__user-data\" };\nconst _hoisted_2 = { class: \"user__user-data\" };\nconst _hoisted_3 = { class: \"user__name\" };\nconst _hoisted_4 = {\n  key: 1,\n  class: \"user__status\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"user__position\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"user__chat-users\"\n};\nimport GroupChatIcon from \"assets/icons/group-chat-icon.svg\";\nimport UserPhoto from \"~/components/chat/ChatPhoto/ChatPhoto.vue\";\nimport { useUsersStore } from \"~/store/users\";\nimport { useSettingsStore } from \"~/store/settings\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ChatWindowDialogData\",\n  setup(__props) {\n    const usersStore = useUsersStore();\n    const { openedChatData } = storeToRefs(usersStore);\n    const settingsStore = useSettingsStore();\n    const { isMobileSize } = storeToRefs(settingsStore);\n    const userFullName = computed(() => {\n      if (openedChatData.value.isGroupChat) {\n        return openedChatData.value.title;\n      } else if (openedChatData.value.firstName) {\n        return openedChatData.value?.firstName + \" \" + openedChatData.value?.secondName;\n      } else {\n        return openedChatData.value?.secondName;\n      }\n    });\n    const setUsersQuantity = computed(\n      () => {\n        const totalChatUsers = openedChatData.value.users?.length.toString();\n        if (totalChatUsers.slice(-1) === 1) {\n          return `${totalChatUsers} участник`;\n        } else if ([2, 3, 4].includes(+totalChatUsers.slice(-1))) {\n          return `${totalChatUsers} участника`;\n        } else {\n          return `${totalChatUsers} участников`;\n        }\n      }\n    );\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createVNode(UserPhoto, {\n          \"is-pinned\": _unref(openedChatData).isPinned,\n          photo: _unref(openedChatData).photo,\n          \"is-active\": _unref(openedChatData).isActive,\n          \"chat-name\": _unref(userFullName),\n          \"user-id\": _unref(openedChatData).id,\n          \"is-group-chat\": _unref(openedChatData).isGroupChat,\n          \"is-open-dialog-image\": true\n        }, null, 8, [\"is-pinned\", \"photo\", \"is-active\", \"chat-name\", \"user-id\", \"is-group-chat\"]),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"user__name-status\", {\n              \"user__name-status_mobile\": _unref(isMobileSize)\n            }])\n          }, [\n            _unref(openedChatData).isGroupChat ? (_openBlock(), _createBlock(_unref(GroupChatIcon), {\n              key: 0,\n              class: \"group__title-icon\"\n            })) : _createCommentVNode(\"\", true),\n            _createElementVNode(\"div\", _hoisted_3, _toDisplayString(_unref(userFullName)), 1),\n            !_unref(openedChatData).isGroupChat ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_unref(openedChatData).isActive ? \"В сети\" : \"Не в сети\"), 1)) : _createCommentVNode(\"\", true)\n          ], 2),\n          !_unref(openedChatData).isGroupChat ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString(_unref(openedChatData).position ?? \"\"), 1)) : _createCommentVNode(\"\", true),\n          _unref(openedChatData).isGroupChat ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString(_unref(setUsersQuantity)), 1)) : _createCommentVNode(\"\", true)\n        ])\n      ]);\n    };\n  }\n});\n",
      "start": 1709273107293,
      "end": 1709273107303,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingszF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvvtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChvN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChnpL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1709273107303,
      "end": 1709273107303,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709273107303,
      "end": 1709273107303,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709273107303,
      "end": 1709273107303,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709273107304,
      "end": 1709273107304,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709273107304,
      "end": 1709273107304,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709273107304,
      "end": 1709273107304,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709273107304,
      "end": 1709273107305,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709273107305,
      "end": 1709273107305,
      "order": "normal"
    }
  ]
}
