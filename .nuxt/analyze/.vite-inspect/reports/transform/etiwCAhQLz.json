{
  "resolvedId": "D:/Work/compas-chat/components/chat/VoiceMessage/VoiceMessage.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup lang=\"ts\">\r\nimport ReceivedIcon from '~/assets/icons/recieved-message-icon.svg'\r\nimport ViewedIcon from '~/assets/icons/viewed-message-icon.svg'\r\nimport DeleteIcon from 'assets/icons/delete-icon.svg'\r\n\r\ninterface PropsType {\r\n  isViewed: boolean\r\n  isReceived: boolean\r\n  isOwnMessage: boolean\r\n  date: string\r\n  audioMessage: unknown\r\n}\r\n\r\nconst props = defineProps<PropsType>()\r\nconst { isViewed, isReceived, isOwnMessage, date, audioMessage } = toRefs(props)\r\n\r\nconst emit = defineEmits<{(emit: 'deleteMessage'): void }>()\r\n\r\nconst isMessageReceived = computed<boolean>(() => {\r\n  return isReceived.value && !isViewed.value\r\n})\r\n\r\nconst isMessageViewed = computed<boolean>(() => isViewed.value)\r\n\r\nconst $visualizationContainer = ref(null)\r\nconst $audioElement = ref(null)\r\n\r\nconst audioDuration = ref(0)\r\n\r\nconst fileSizeInBytes = ref()\r\nconst fileSizeInKilobytes = computed(() => fileSizeInBytes.value / 1024)\r\n\r\nconst voiceMessageLengthTransformer = () => {\r\n  if (!audioDuration.value) {\r\n    return '00:00'\r\n  }\r\n\r\n  const oneMinuteInSeconds = 60\r\n\r\n  const messageDurationSeconds = currentCallNumber.value > 0\r\n    ? (currentCallNumber.value * speedToCallFunction).toFixed(0)\r\n    : audioDuration.value.toFixed(0)\r\n\r\n  const minutes = Math.floor(messageDurationSeconds / oneMinuteInSeconds)\r\n  const seconds = Math.floor(messageDurationSeconds % oneMinuteInSeconds)\r\n\r\n  let finalDuration = ''\r\n\r\n  function addTime (time: number, isSeconds: boolean = false) {\r\n    if (time < 10) {\r\n      finalDuration += '0' + time\r\n    } else {\r\n      finalDuration += time\r\n    }\r\n\r\n    !isSeconds && (finalDuration += ':')\r\n  }\r\n\r\n  addTime(minutes)\r\n  addTime(seconds, true)\r\n\r\n  return finalDuration\r\n}\r\n\r\nconst voiceMessageLength = ref()\r\n\r\nlet audioData\r\n\r\nfunction visualizeAudioData () {\r\n  const visualizationDiv = $visualizationContainer.value\r\n  visualizationDiv.innerHTML = ''\r\n\r\n  const barWidth = 3\r\n  const barSpacing = 1\r\n\r\n  const maxBarHeight = 19\r\n\r\n  for (let i = 0; i < numBars; i++) {\r\n    const startIndex = Math.floor((i / numBars) * audioData.length)\r\n    const endIndex = Math.floor(((i + 1) / numBars) * audioData.length)\r\n\r\n    let sum = 0\r\n    for (let j = startIndex; j < endIndex; j++) {\r\n      sum += Math.abs(audioData[j])\r\n    }\r\n\r\n    const average = sum / (endIndex - startIndex)\r\n    let barHeight = average * 10 * 20\r\n\r\n    if (average >= 0 && average < 0.01) {\r\n      barHeight = 2 // Установка высоты столбика в 2 пикселя, если значение равно 0\r\n    }\r\n\r\n    if (barHeight > 19) {\r\n      barHeight = maxBarHeight\r\n    }\r\n\r\n    const bar = document.createElement('div')\r\n    bar.style.width = barWidth + 'px'\r\n    bar.style.height = barHeight + 'px'\r\n    bar.style.backgroundColor = '#8babd8'\r\n    bar.style.borderRadius = '10px'\r\n    bar.style.marginRight = barSpacing + 'px'\r\n\r\n    visualizationDiv.appendChild(bar)\r\n  }\r\n}\r\n\r\nconst numBars = 64\r\nconst currentCallNumber = ref(0)\r\nlet speedToCallFunction\r\nlet visualizationTimeoutId // Переменная для хранения идентификатора таймера\r\nlet isVoiceMessageShouldBeRestarted = true\r\n\r\nwatch(\r\n  () => currentCallNumber.value,\r\n  () => {\r\n    voiceMessageLength.value = voiceMessageLengthTransformer()\r\n  }\r\n)\r\n\r\nfunction updateVisualizationColors () {\r\n  const visualizationDiv = $visualizationContainer.value\r\n  const bars = visualizationDiv.querySelectorAll('div')\r\n\r\n  bars.forEach((bar, index) => {\r\n    if (index <= currentCallNumber.value) {\r\n      // Закрашиваем столбики, которые уже завершены\r\n      bar.style.backgroundColor = '#1152a1'\r\n    } else {\r\n      // Оставляем незавершенные столбики без цвета\r\n      bar.style.backgroundColor = '#8babd8'\r\n    }\r\n  })\r\n\r\n  if (currentCallNumber.value < numBars) {\r\n    isVoiceMessageShouldBeRestarted = false\r\n    currentCallNumber.value += 1\r\n    visualizationTimeoutId = setTimeout(() => updateVisualizationColors(), speedToCallFunction * 1000)\r\n  } else {\r\n    isVoiceMessageActive.value = false\r\n    isVoiceMessageShouldBeRestarted = true\r\n  }\r\n}\r\n\r\nconst isVoiceMessageActive = ref(false)\r\nconst toggleVoiceMessageActive = () => {\r\n  isVoiceMessageActive.value = !isVoiceMessageActive.value\r\n}\r\n\r\n// Запуск обновления заливки фона столбиков\r\nconst onClickStartVoiceMessage = () => {\r\n  if (isVoiceMessageActive.value) {\r\n    isVoiceMessageShouldBeRestarted = false\r\n    pauseVoiceMessage()\r\n  } else {\r\n    if (isVoiceMessageShouldBeRestarted) {\r\n      currentCallNumber.value = 0\r\n    }\r\n    startVoiceMessage()\r\n  }\r\n}\r\n\r\nconst startVoiceMessage = () => {\r\n  $audioElement.value.play()\r\n  toggleVoiceMessageActive()\r\n  updateVisualizationColors()\r\n}\r\n\r\nconst pauseVoiceMessage = () => {\r\n  $audioElement.value.pause()\r\n  toggleVoiceMessageActive()\r\n  clearTimeout(visualizationTimeoutId)\r\n}\r\n\r\nconst deleteMessage = () => emit('deleteMessage')\r\n\r\nonMounted(() => {\r\n  fetch(audioMessage.value)\r\n    .then(response => response.blob())\r\n    .then((blob) => {\r\n      fileSizeInBytes.value = blob.size\r\n\r\n      const reader = new FileReader()\r\n      reader.onloadend = () => {\r\n        const arrayBuffer = reader.result\r\n        const audioContext = new AudioContext()\r\n        audioContext.decodeAudioData(arrayBuffer, (audioBuffer) => {\r\n          audioData = audioBuffer.getChannelData(0)\r\n\r\n          audioDuration.value = audioBuffer.duration\r\n          speedToCallFunction = audioDuration.value / numBars\r\n\r\n          voiceMessageLength.value = voiceMessageLengthTransformer()\r\n\r\n          visualizeAudioData()\r\n        })\r\n      }\r\n      reader.readAsArrayBuffer(blob)\r\n    })\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"audio-msg\">\r\n    <div class=\"audio-msg__body\">\r\n      <div\r\n        class=\"audio-msg__btn\"\r\n        @click=\"onClickStartVoiceMessage\"\r\n      >\r\n        <div\r\n          v-if=\"!isVoiceMessageActive\"\r\n          class=\"audio-msg__triangle\"\r\n        />\r\n\r\n        <div\r\n          v-else\r\n          class=\"audio-msg__pause\"\r\n        />\r\n      </div>\r\n      <div class=\"audio-msg__data\">\r\n        <div\r\n          ref=\"$visualizationContainer\"\r\n          class=\"audio-msg__columns\"\r\n        />\r\n\r\n        <div class=\"audio-msg__info\">\r\n          <div class=\"audio-msg__length\">\r\n            {{ voiceMessageLength }},\r\n          </div>\r\n          <div class=\"audio-msg__weight\">\r\n            {{ fileSizeInKilobytes.toFixed(2) }} KB\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <audio\r\n        ref=\"$audioElement\"\r\n        style=\"display: none\"\r\n        class=\"audioElement\"\r\n        :src=\"audioMessage\"\r\n      />\r\n    </div>\r\n    <div class=\"audio-msg__time-status\">\r\n      <div>{{ date?.slice(-5) }}</div>\r\n      <div v-if=\"isOwnMessage\">\r\n        <ReceivedIcon v-if=\"isMessageReceived\" />\r\n        <ViewedIcon v-if=\"isMessageViewed\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"audio-msg__delete\"\r\n      @click=\"deleteMessage\"\r\n    >\r\n      <DeleteIcon class=\"audio-msg__delete-icon\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n@use '~/assets/styles/_variables.scss' as variables;\r\n\r\n.audio-msg {\r\n  padding: 10px 15px;\r\n  background-color: #f7f8fa;\r\n  position: relative;\r\n}\r\n\r\n.audio-msg__body {\r\n  display: flex;\r\n  gap: 15px;\r\n}\r\n\r\n.audio-msg__btn {\r\n  flex: 0 0 40px;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin: 0 15px 0 0;\r\n  padding: 11.7px 10.1px 11.7px 13.8px;\r\n  background-color: #8babd8;\r\n  border-radius: 40px;\r\n  cursor: pointer;\r\n  transition: 0.2s all;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.audio-msg__btn:active {\r\n  opacity: 0.7;\r\n}\r\n\r\n.audio-msg__triangle {\r\n  width: 16px;\r\n  height: 16px;\r\n  border-top: 9px solid transparent;\r\n  border-left: 16px solid variables.$color-white;\r\n  border-bottom: 9px solid transparent;\r\n  border-radius: 2px;\r\n}\r\n\r\n.audio-msg__pause {\r\n  position: relative;\r\n}\r\n\r\n.audio-msg__pause:before {\r\n  content: '';\r\n  position: absolute;\r\n  top: -8px;\r\n  width: 4px;\r\n  height: 16px;\r\n  border-radius: 2px;\r\n  background-color: variables.$color-white;\r\n}\r\n\r\n.audio-msg__pause:after {\r\n  content: '';\r\n  position: absolute;\r\n  top: -8px;\r\n  right: 4px;\r\n  width: 4px;\r\n  height: 16px;\r\n  border-radius: 2px;\r\n  background-color: variables.$color-white;\r\n}\r\n\r\n.audio-msg__time-status {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 5px;\r\n}\r\n\r\n.audioPlayer {\r\n\r\n}\r\n\r\n.audio-msg__columns {\r\n  display: flex;\r\n  align-items: center;\r\n  height: 20px;\r\n  width: 220px;\r\n  margin-bottom: 9px;\r\n}\r\n\r\n.audio-msg__info {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.audio-msg__length,\r\n.audio-msg__weight {\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  color: #8babd8;\r\n}\r\n\r\n.audio-msg__delete {\r\n  position: absolute;\r\n  top: -5px;\r\n  right: -5px;\r\n  width: 25px;\r\n  height: 25px;\r\n  border-radius: 5px;\r\n  background-color: variables.$color-white;\r\n  box-shadow: 0 0 3px 0 variables.$color-black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 1px solid variables.$color-light-grey;\r\n  cursor: pointer;\r\n  transition: 0.2s scale;\r\n}\r\n\r\n.audio-msg__delete-icon {\r\n  color: variables.$color-red;\r\n}\r\n\r\n.audio-msg__delete:hover {\r\n  scale: 1.1;\r\n}\r\n</style>\r\n",
      "start": 1709273107364,
      "end": 1709273107853,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709273107853,
      "end": 1709273107853,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709273107853,
      "end": 1709273107853,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709273107853,
      "end": 1709273107853,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709273107853,
      "end": 1709273107853,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709273107853,
      "end": 1709273107853,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709273107853,
      "end": 1709273107853,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709273107854,
      "end": 1709273107854,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import _sfc_main from \"D:/Work/compas-chat/components/chat/VoiceMessage/VoiceMessage.vue?vue&type=script&setup=true&lang.ts\";\nexport * from \"D:/Work/compas-chat/components/chat/VoiceMessage/VoiceMessage.vue?vue&type=script&setup=true&lang.ts\";\nimport \"D:/Work/compas-chat/components/chat/VoiceMessage/VoiceMessage.vue?vue&type=style&index=0&scoped=b064cf09&lang.scss\";\nimport _export_sfc from \"\\0plugin-vue:export-helper\";\nexport default /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__scopeId\", \"data-v-b064cf09\"]]);\n",
      "start": 1709273107854,
      "end": 1709273107902,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709273107902,
      "end": 1709273107902,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273107902,
      "end": 1709273107902,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709273107902,
      "end": 1709273107902,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709273107902,
      "end": 1709273107902,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709273107902,
      "end": 1709273107902,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273107902,
      "end": 1709273107902,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709273107902,
      "end": 1709273107902,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709273107902,
      "end": 1709273107902,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709273107903,
      "end": 1709273107903,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709273107903,
      "end": 1709273107903,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709273107903,
      "end": 1709273107903,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709273107903,
      "end": 1709273107903,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709273107903,
      "end": 1709273107903,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709273107903,
      "end": 1709273107903,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709273107903,
      "end": 1709273107903,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709273107903,
      "end": 1709273107903,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709273107903,
      "end": 1709273107904,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709273107904,
      "end": 1709273107904,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709273107904,
      "end": 1709273107905,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709273107905,
      "end": 1709273107905,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709273107905,
      "end": 1709273107905,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709273107905,
      "end": 1709273107905,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709273107905,
      "end": 1709273107905,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709273107905,
      "end": 1709273107905,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709273107905,
      "end": 1709273107905,
      "order": "normal"
    }
  ]
}
