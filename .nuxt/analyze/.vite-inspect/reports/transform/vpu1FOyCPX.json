{
  "resolvedId": "D:/Work/compas-chat/components/chat/DialogBody/DialogBody.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, isRef as _isRef, createVNode as _createVNode } from \"vue\"\n\nimport { nextTick } from 'vue'\r\nimport ChatInput from '~/components/chat/ui/ChatInput.vue'\r\nimport SendMsgIcon from '~/assets/icons/send-msg-icon.svg'\r\nimport MicrophoneIcon from '~/assets/icons/microphone-icon.svg'\r\nimport { useUsersStore } from '~/store/users'\r\nimport OwnMessage from '~/components/chat/OwnMessage/OwnMessage.vue'\r\nimport OtherMessage from '~/components/chat/OtherMessage/OtherMessage.vue'\r\nimport VoiceMessage from '~/components/chat/VoiceMessage/VoiceMessage.vue'\r\nimport { useSettingsStore } from '~/store/settings'\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DialogBody',\n  setup(__props) {\n\r\nconst usersStore = useUsersStore()\r\nconst { openedChatData, userId, openedChatId } = storeToRefs(usersStore)\r\n\r\nconst settingsStore = useSettingsStore()\r\nconst { isMobileSize } = storeToRefs(settingsStore)\r\n\r\nconst messageValue = ref<string>()\r\n\r\nconst messageType = ref<'text' | 'voice'>('text')\r\n\r\nconst setMessageType = () => {\r\n  // чтобы разделить срабатывание click и dbclick\r\n  clearTimeout(oneClickTimer)\r\n  clearTimeout(oneClickTimer - 1)\r\n\r\n  if (isMakingAVoiceMessage.value) return\r\n\r\n  if (messageType.value === 'text') {\r\n    messageType.value = 'voice'\r\n  } else if (messageType.value === 'voice') {\r\n    messageType.value = 'text'\r\n  }\r\n}\r\n\r\nconst $dialogBody = ref<HTMLDivElement>()\r\nconst $dialogWrapper = ref<HTMLDivElement>()\r\nconst $dialogActions = ref<HTMLDivElement>()\r\n\r\nconst isDialogBodyHeightsLessThenVH = ref(true)\r\n\r\nconst scrollToDialogWrapperBottom = () => {\r\n  $dialogWrapper.value.scrollTop = $dialogWrapper.value.scrollHeight\r\n}\r\n\r\nconst checkIfDialogBodyHeightsLessThenVH = async () => {\r\n  await nextTick()\r\n  const dialogBodyHeight = $dialogBody.value.offsetHeight\r\n  const dialogWrapperHeight = $dialogWrapper.value.offsetHeight\r\n\r\n  isDialogBodyHeightsLessThenVH.value = (dialogBodyHeight < dialogWrapperHeight)\r\n}\r\n\r\nconst isMakingAVoiceMessage = ref(false)\r\nconst voiceMessage = ref([])\r\nlet doNotSaveVoiceMessage = false\r\n\r\nconst setVoiceMessage = async (isStarted: boolean, cleanMessage: boolean = false) => {\r\n  if (cleanMessage) {\r\n    doNotSaveVoiceMessage = true\r\n  }\r\n\r\n  isMakingAVoiceMessage.value = isStarted\r\n  await startRecord()\r\n}\r\n\r\nlet chunks = []\r\nlet mediaRecorder = null\r\nlet audioBlob = null\r\nlet startTime\r\nconst messageDuration = ref(0)\r\nlet messageIntervalId\r\n\r\nasync function startRecord () {\r\n  if (!navigator.mediaDevices && !navigator.mediaDevices.getUserMedia) {\r\n    return console.warn('Not supported')\r\n  }\r\n\r\n  if (!mediaRecorder) {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: true\r\n      })\r\n      mediaRecorder = new MediaRecorder(stream)\r\n      mediaRecorder.start()\r\n\r\n      startTime = new Date().getTime()\r\n\r\n      mediaRecorder.ondataavailable = (e) => {\r\n        chunks.push(e.data)\r\n      }\r\n\r\n      messageIntervalId = setInterval(() => messageDuration.value = (new Date().getTime() - startTime) / 1000, 1000)\r\n\r\n      mediaRecorder.onstop = mediaRecorderStop\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  } else {\r\n    mediaRecorder.stop()\r\n    clearInterval(messageIntervalId)\r\n    messageDuration.value = 0\r\n  }\r\n}\r\n\r\nfunction mediaRecorderStop () {\r\n  audioBlob = new Blob(chunks, { type: 'audio/mp3' })\r\n  const src = URL.createObjectURL(audioBlob)\r\n\r\n  if (doNotSaveVoiceMessage) {\r\n    voiceMessage.value = []\r\n  } else {\r\n    voiceMessage.value = [src]\r\n  }\r\n\r\n  mediaRecorder = null\r\n  chunks = []\r\n}\r\n\r\nconst sendTextMessage = () => {\r\n}\r\n\r\nlet oneClickTimer\r\n\r\nconst handleMessage = () => {\r\n  oneClickTimer = setTimeout(() => {\r\n    if (messageType.value === 'text') {\r\n      sendTextMessage()\r\n    } else if (messageType.value === 'voice') {\r\n      if (isMakingAVoiceMessage.value) {\r\n        setVoiceMessage(false)\r\n      } else {\r\n        setVoiceMessage(true)\r\n      }\r\n    }\r\n  }, 300)\r\n}\r\n\r\nonMounted(async () => {\r\n  await checkIfDialogBodyHeightsLessThenVH()\r\n  scrollToDialogWrapperBottom()\r\n})\r\n\r\nwatch(\r\n  () => openedChatId.value,\r\n  async () => {\r\n    await checkIfDialogBodyHeightsLessThenVH()\r\n    scrollToDialogWrapperBottom()\r\n  }\r\n)\r\n\r\nconst checkIfLastOfSeveralMessages = (idx: string | number): boolean => {\r\n  const messages = openedChatData.value!.messages\r\n  if (messages[idx + 1]) {\r\n    return messages[idx].userId !== messages[idx + 1].userId\r\n  } else {\r\n    return true\r\n  }\r\n}\r\n\r\nconst deleteMessage = (messageIdx) => {\r\n  voiceMessage.value = voiceMessage.value.splice(messageIdx, -1)\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"dialog\", {\r\n      'dialog_mobile': _unref(isMobileSize)\r\n    }])\n  }, [\n    _createElementVNode(\"div\", {\n      ref_key: \"$dialogWrapper\",\n      ref: $dialogWrapper,\n      class: _normalizeClass([\"dialog__wrapper\", {\r\n        'dialog__wrapper_flex': _unref(isDialogBodyHeightsLessThenVH)\r\n      }])\n    }, [\n      _createElementVNode(\"div\", {\n        ref_key: \"$dialogBody\",\n        ref: $dialogBody,\n        class: \"dialog__body\"\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(openedChatData).messages, (message, idx) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: message.id,\n            class: \"dialog__message\",\n            style: _normalizeStyle({\r\n            alignSelf: message.userId == _unref(userId) ? 'flex-end' : 'flex-start',\r\n            marginBottom: _unref(openedChatData).messages.length - 1 === idx && '5px'\r\n          })\n          }, [\n            (message.userId === _unref(userId))\n              ? (_openBlock(), _createBlock(OwnMessage, {\n                  key: 0,\n                  message: message,\n                  \"last-of-several-msgs\": checkIfLastOfSeveralMessages(idx)\n                }, null, 8, [\"message\", \"last-of-several-msgs\"]))\n              : (_openBlock(), _createBlock(OtherMessage, {\n                  key: 1,\n                  message: message,\n                  \"last-of-several-msgs\": checkIfLastOfSeveralMessages(idx)\n                }, null, 8, [\"message\", \"last-of-several-msgs\"]))\n          ], 4))\n        }), 128))\n      ], 512)\n    ], 2),\n    (_unref(voiceMessage).length)\n      ? (_openBlock(), _createBlock(VoiceMessage, {\n          key: 0,\n          class: \"dialog__voice\",\n          \"is-own-message\": true,\n          date: \"12:01:2024 14:15\",\n          \"is-received\": true,\n          \"is-viewed\": true,\n          \"audio-message\": _unref(voiceMessage)[0],\n          onDeleteMessage: _cache[0] || (_cache[0] = ($event: any) => (deleteMessage(0)))\n        }, null, 8, [\"audio-message\"]))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      ref_key: \"$dialogActions\",\n      ref: $dialogActions,\n      class: \"dialog__actions\"\n    }, [\n      _createVNode(ChatInput, {\n        \"input-value\": _unref(messageValue),\n        \"onUpdate:inputValue\": _cache[1] || (_cache[1] = ($event: any) => (_isRef(messageValue) ? (messageValue).value = $event : null)),\n        class: \"dialog__input\",\n        placeholder: \"Напишите сообщение…\",\n        \"add-documents\": true,\n        \"is-making-a-voice-message\": _unref(isMakingAVoiceMessage),\n        \"message-duration\": _unref(messageDuration)\n      }, null, 8, [\"input-value\", \"is-making-a-voice-message\", \"message-duration\"]),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"dialog__send-msg\", {\r\n          'dialog__send-msg_active': _unref(isMakingAVoiceMessage),\r\n        }]),\n        onDblclick: setMessageType,\n        onClick: handleMessage\n      }, [\n        (_unref(messageType) === 'text' || _unref(isMakingAVoiceMessage))\n          ? (_openBlock(), _createBlock(_unref(SendMsgIcon), { key: 0 }))\n          : _createCommentVNode(\"\", true),\n        (_unref(messageType) === 'voice' && !_unref(isMakingAVoiceMessage))\n          ? (_openBlock(), _createBlock(_unref(MicrophoneIcon), { key: 1 }))\n          : _createCommentVNode(\"\", true)\n      ], 34)\n    ], 512),\n    (_unref(isMakingAVoiceMessage))\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          class: \"dialog__voice-bg\",\n          onClick: _cache[2] || (_cache[2] = ($event: any) => (setVoiceMessage(false, true)))\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 2))\n}\n}\n\n})",
      "start": 1709273107268,
      "end": 1709273107268
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709273107268,
      "end": 1709273107268,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709273107268,
      "end": 1709273107268,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709273107268,
      "end": 1709273107268,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709273107268,
      "end": 1709273107268,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, isRef as _isRef, createVNode as _createVNode } from \"vue\";\nimport { nextTick } from \"vue\";\nimport ChatInput from \"~/components/chat/ui/ChatInput.vue\";\nimport SendMsgIcon from \"~/assets/icons/send-msg-icon.svg\";\nimport MicrophoneIcon from \"~/assets/icons/microphone-icon.svg\";\nimport { useUsersStore } from \"~/store/users\";\nimport OwnMessage from \"~/components/chat/OwnMessage/OwnMessage.vue\";\nimport OtherMessage from \"~/components/chat/OtherMessage/OtherMessage.vue\";\nimport VoiceMessage from \"~/components/chat/VoiceMessage/VoiceMessage.vue\";\nimport { useSettingsStore } from \"~/store/settings\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"DialogBody\",\n  setup(__props) {\n    const usersStore = useUsersStore();\n    const { openedChatData, userId, openedChatId } = storeToRefs(usersStore);\n    const settingsStore = useSettingsStore();\n    const { isMobileSize } = storeToRefs(settingsStore);\n    const messageValue = ref();\n    const messageType = ref(\"text\");\n    const setMessageType = () => {\n      clearTimeout(oneClickTimer);\n      clearTimeout(oneClickTimer - 1);\n      if (isMakingAVoiceMessage.value)\n        return;\n      if (messageType.value === \"text\") {\n        messageType.value = \"voice\";\n      } else if (messageType.value === \"voice\") {\n        messageType.value = \"text\";\n      }\n    };\n    const $dialogBody = ref();\n    const $dialogWrapper = ref();\n    const $dialogActions = ref();\n    const isDialogBodyHeightsLessThenVH = ref(true);\n    const scrollToDialogWrapperBottom = () => {\n      $dialogWrapper.value.scrollTop = $dialogWrapper.value.scrollHeight;\n    };\n    const checkIfDialogBodyHeightsLessThenVH = async () => {\n      await nextTick();\n      const dialogBodyHeight = $dialogBody.value.offsetHeight;\n      const dialogWrapperHeight = $dialogWrapper.value.offsetHeight;\n      isDialogBodyHeightsLessThenVH.value = dialogBodyHeight < dialogWrapperHeight;\n    };\n    const isMakingAVoiceMessage = ref(false);\n    const voiceMessage = ref([]);\n    let doNotSaveVoiceMessage = false;\n    const setVoiceMessage = async (isStarted, cleanMessage = false) => {\n      if (cleanMessage) {\n        doNotSaveVoiceMessage = true;\n      }\n      isMakingAVoiceMessage.value = isStarted;\n      await startRecord();\n    };\n    let chunks = [];\n    let mediaRecorder = null;\n    let audioBlob = null;\n    let startTime;\n    const messageDuration = ref(0);\n    let messageIntervalId;\n    async function startRecord() {\n      if (!navigator.mediaDevices && !navigator.mediaDevices.getUserMedia) {\n        return console.warn(\"Not supported\");\n      }\n      if (!mediaRecorder) {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            audio: true\n          });\n          mediaRecorder = new MediaRecorder(stream);\n          mediaRecorder.start();\n          startTime = (/* @__PURE__ */ new Date()).getTime();\n          mediaRecorder.ondataavailable = (e) => {\n            chunks.push(e.data);\n          };\n          messageIntervalId = setInterval(() => messageDuration.value = ((/* @__PURE__ */ new Date()).getTime() - startTime) / 1e3, 1e3);\n          mediaRecorder.onstop = mediaRecorderStop;\n        } catch (e) {\n          console.error(e);\n        }\n      } else {\n        mediaRecorder.stop();\n        clearInterval(messageIntervalId);\n        messageDuration.value = 0;\n      }\n    }\n    function mediaRecorderStop() {\n      audioBlob = new Blob(chunks, { type: \"audio/mp3\" });\n      const src = URL.createObjectURL(audioBlob);\n      if (doNotSaveVoiceMessage) {\n        voiceMessage.value = [];\n      } else {\n        voiceMessage.value = [src];\n      }\n      mediaRecorder = null;\n      chunks = [];\n    }\n    const sendTextMessage = () => {\n    };\n    let oneClickTimer;\n    const handleMessage = () => {\n      oneClickTimer = setTimeout(() => {\n        if (messageType.value === \"text\") {\n          sendTextMessage();\n        } else if (messageType.value === \"voice\") {\n          if (isMakingAVoiceMessage.value) {\n            setVoiceMessage(false);\n          } else {\n            setVoiceMessage(true);\n          }\n        }\n      }, 300);\n    };\n    onMounted(async () => {\n      await checkIfDialogBodyHeightsLessThenVH();\n      scrollToDialogWrapperBottom();\n    });\n    watch(\n      () => openedChatId.value,\n      async () => {\n        await checkIfDialogBodyHeightsLessThenVH();\n        scrollToDialogWrapperBottom();\n      }\n    );\n    const checkIfLastOfSeveralMessages = (idx) => {\n      const messages = openedChatData.value.messages;\n      if (messages[idx + 1]) {\n        return messages[idx].userId !== messages[idx + 1].userId;\n      } else {\n        return true;\n      }\n    };\n    const deleteMessage = (messageIdx) => {\n      voiceMessage.value = voiceMessage.value.splice(messageIdx, -1);\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: _normalizeClass([\"dialog\", {\n          \"dialog_mobile\": _unref(isMobileSize)\n        }])\n      }, [\n        _createElementVNode(\"div\", {\n          ref_key: \"$dialogWrapper\",\n          ref: $dialogWrapper,\n          class: _normalizeClass([\"dialog__wrapper\", {\n            \"dialog__wrapper_flex\": _unref(isDialogBodyHeightsLessThenVH)\n          }])\n        }, [\n          _createElementVNode(\"div\", {\n            ref_key: \"$dialogBody\",\n            ref: $dialogBody,\n            class: \"dialog__body\"\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(openedChatData).messages, (message, idx) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: message.id,\n                class: \"dialog__message\",\n                style: _normalizeStyle({\n                  alignSelf: message.userId == _unref(userId) ? \"flex-end\" : \"flex-start\",\n                  marginBottom: _unref(openedChatData).messages.length - 1 === idx && \"5px\"\n                })\n              }, [\n                message.userId === _unref(userId) ? (_openBlock(), _createBlock(OwnMessage, {\n                  key: 0,\n                  message,\n                  \"last-of-several-msgs\": checkIfLastOfSeveralMessages(idx)\n                }, null, 8, [\"message\", \"last-of-several-msgs\"])) : (_openBlock(), _createBlock(OtherMessage, {\n                  key: 1,\n                  message,\n                  \"last-of-several-msgs\": checkIfLastOfSeveralMessages(idx)\n                }, null, 8, [\"message\", \"last-of-several-msgs\"]))\n              ], 4);\n            }), 128))\n          ], 512)\n        ], 2),\n        _unref(voiceMessage).length ? (_openBlock(), _createBlock(VoiceMessage, {\n          key: 0,\n          class: \"dialog__voice\",\n          \"is-own-message\": true,\n          date: \"12:01:2024 14:15\",\n          \"is-received\": true,\n          \"is-viewed\": true,\n          \"audio-message\": _unref(voiceMessage)[0],\n          onDeleteMessage: _cache[0] || (_cache[0] = ($event) => deleteMessage(0))\n        }, null, 8, [\"audio-message\"])) : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", {\n          ref_key: \"$dialogActions\",\n          ref: $dialogActions,\n          class: \"dialog__actions\"\n        }, [\n          _createVNode(ChatInput, {\n            \"input-value\": _unref(messageValue),\n            \"onUpdate:inputValue\": _cache[1] || (_cache[1] = ($event) => _isRef(messageValue) ? messageValue.value = $event : null),\n            class: \"dialog__input\",\n            placeholder: \"Напишите сообщение…\",\n            \"add-documents\": true,\n            \"is-making-a-voice-message\": _unref(isMakingAVoiceMessage),\n            \"message-duration\": _unref(messageDuration)\n          }, null, 8, [\"input-value\", \"is-making-a-voice-message\", \"message-duration\"]),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"dialog__send-msg\", {\n              \"dialog__send-msg_active\": _unref(isMakingAVoiceMessage)\n            }]),\n            onDblclick: setMessageType,\n            onClick: handleMessage\n          }, [\n            _unref(messageType) === \"text\" || _unref(isMakingAVoiceMessage) ? (_openBlock(), _createBlock(_unref(SendMsgIcon), { key: 0 })) : _createCommentVNode(\"\", true),\n            _unref(messageType) === \"voice\" && !_unref(isMakingAVoiceMessage) ? (_openBlock(), _createBlock(_unref(MicrophoneIcon), { key: 1 })) : _createCommentVNode(\"\", true)\n          ], 34)\n        ], 512),\n        _unref(isMakingAVoiceMessage) ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          class: \"dialog__voice-bg\",\n          onClick: _cache[2] || (_cache[2] = ($event) => setVoiceMessage(false, true))\n        })) : _createCommentVNode(\"\", true)\n      ], 2);\n    };\n  }\n});\n",
      "start": 1709273107274,
      "end": 1709273107291,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/Work/compas-chat/components/chat/DialogBody/DialogBody.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, isRef as _isRef, createVNode as _createVNode } from \"vue\"\n\nimport { nextTick } from 'vue'\r\nimport ChatInput from '~/components/chat/ui/ChatInput.vue'\r\nimport SendMsgIcon from '~/assets/icons/send-msg-icon.svg'\r\nimport MicrophoneIcon from '~/assets/icons/microphone-icon.svg'\r\nimport { useUsersStore } from '~/store/users'\r\nimport OwnMessage from '~/components/chat/OwnMessage/OwnMessage.vue'\r\nimport OtherMessage from '~/components/chat/OtherMessage/OtherMessage.vue'\r\nimport VoiceMessage from '~/components/chat/VoiceMessage/VoiceMessage.vue'\r\nimport { useSettingsStore } from '~/store/settings'\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DialogBody',\n  setup(__props) {\n\r\nconst usersStore = useUsersStore()\r\nconst { openedChatData, userId, openedChatId } = storeToRefs(usersStore)\r\n\r\nconst settingsStore = useSettingsStore()\r\nconst { isMobileSize } = storeToRefs(settingsStore)\r\n\r\nconst messageValue = ref<string>()\r\n\r\nconst messageType = ref<'text' | 'voice'>('text')\r\n\r\nconst setMessageType = () => {\r\n  // чтобы разделить срабатывание click и dbclick\r\n  clearTimeout(oneClickTimer)\r\n  clearTimeout(oneClickTimer - 1)\r\n\r\n  if (isMakingAVoiceMessage.value) return\r\n\r\n  if (messageType.value === 'text') {\r\n    messageType.value = 'voice'\r\n  } else if (messageType.value === 'voice') {\r\n    messageType.value = 'text'\r\n  }\r\n}\r\n\r\nconst $dialogBody = ref<HTMLDivElement>()\r\nconst $dialogWrapper = ref<HTMLDivElement>()\r\nconst $dialogActions = ref<HTMLDivElement>()\r\n\r\nconst isDialogBodyHeightsLessThenVH = ref(true)\r\n\r\nconst scrollToDialogWrapperBottom = () => {\r\n  $dialogWrapper.value.scrollTop = $dialogWrapper.value.scrollHeight\r\n}\r\n\r\nconst checkIfDialogBodyHeightsLessThenVH = async () => {\r\n  await nextTick()\r\n  const dialogBodyHeight = $dialogBody.value.offsetHeight\r\n  const dialogWrapperHeight = $dialogWrapper.value.offsetHeight\r\n\r\n  isDialogBodyHeightsLessThenVH.value = (dialogBodyHeight < dialogWrapperHeight)\r\n}\r\n\r\nconst isMakingAVoiceMessage = ref(false)\r\nconst voiceMessage = ref([])\r\nlet doNotSaveVoiceMessage = false\r\n\r\nconst setVoiceMessage = async (isStarted: boolean, cleanMessage: boolean = false) => {\r\n  if (cleanMessage) {\r\n    doNotSaveVoiceMessage = true\r\n  }\r\n\r\n  isMakingAVoiceMessage.value = isStarted\r\n  await startRecord()\r\n}\r\n\r\nlet chunks = []\r\nlet mediaRecorder = null\r\nlet audioBlob = null\r\nlet startTime\r\nconst messageDuration = ref(0)\r\nlet messageIntervalId\r\n\r\nasync function startRecord () {\r\n  if (!navigator.mediaDevices && !navigator.mediaDevices.getUserMedia) {\r\n    return console.warn('Not supported')\r\n  }\r\n\r\n  if (!mediaRecorder) {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: true\r\n      })\r\n      mediaRecorder = new MediaRecorder(stream)\r\n      mediaRecorder.start()\r\n\r\n      startTime = new Date().getTime()\r\n\r\n      mediaRecorder.ondataavailable = (e) => {\r\n        chunks.push(e.data)\r\n      }\r\n\r\n      messageIntervalId = setInterval(() => messageDuration.value = (new Date().getTime() - startTime) / 1000, 1000)\r\n\r\n      mediaRecorder.onstop = mediaRecorderStop\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  } else {\r\n    mediaRecorder.stop()\r\n    clearInterval(messageIntervalId)\r\n    messageDuration.value = 0\r\n  }\r\n}\r\n\r\nfunction mediaRecorderStop () {\r\n  audioBlob = new Blob(chunks, { type: 'audio/mp3' })\r\n  const src = URL.createObjectURL(audioBlob)\r\n\r\n  if (doNotSaveVoiceMessage) {\r\n    voiceMessage.value = []\r\n  } else {\r\n    voiceMessage.value = [src]\r\n  }\r\n\r\n  mediaRecorder = null\r\n  chunks = []\r\n}\r\n\r\nconst sendTextMessage = () => {\r\n}\r\n\r\nlet oneClickTimer\r\n\r\nconst handleMessage = () => {\r\n  oneClickTimer = setTimeout(() => {\r\n    if (messageType.value === 'text') {\r\n      sendTextMessage()\r\n    } else if (messageType.value === 'voice') {\r\n      if (isMakingAVoiceMessage.value) {\r\n        setVoiceMessage(false)\r\n      } else {\r\n        setVoiceMessage(true)\r\n      }\r\n    }\r\n  }, 300)\r\n}\r\n\r\nonMounted(async () => {\r\n  await checkIfDialogBodyHeightsLessThenVH()\r\n  scrollToDialogWrapperBottom()\r\n})\r\n\r\nwatch(\r\n  () => openedChatId.value,\r\n  async () => {\r\n    await checkIfDialogBodyHeightsLessThenVH()\r\n    scrollToDialogWrapperBottom()\r\n  }\r\n)\r\n\r\nconst checkIfLastOfSeveralMessages = (idx: string | number): boolean => {\r\n  const messages = openedChatData.value!.messages\r\n  if (messages[idx + 1]) {\r\n    return messages[idx].userId !== messages[idx + 1].userId\r\n  } else {\r\n    return true\r\n  }\r\n}\r\n\r\nconst deleteMessage = (messageIdx) => {\r\n  voiceMessage.value = voiceMessage.value.splice(messageIdx, -1)\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"dialog\", {\r\n      'dialog_mobile': _unref(isMobileSize)\r\n    }])\n  }, [\n    _createElementVNode(\"div\", {\n      ref_key: \"$dialogWrapper\",\n      ref: $dialogWrapper,\n      class: _normalizeClass([\"dialog__wrapper\", {\r\n        'dialog__wrapper_flex': _unref(isDialogBodyHeightsLessThenVH)\r\n      }])\n    }, [\n      _createElementVNode(\"div\", {\n        ref_key: \"$dialogBody\",\n        ref: $dialogBody,\n        class: \"dialog__body\"\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(openedChatData).messages, (message, idx) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: message.id,\n            class: \"dialog__message\",\n            style: _normalizeStyle({\r\n            alignSelf: message.userId == _unref(userId) ? 'flex-end' : 'flex-start',\r\n            marginBottom: _unref(openedChatData).messages.length - 1 === idx && '5px'\r\n          })\n          }, [\n            (message.userId === _unref(userId))\n              ? (_openBlock(), _createBlock(OwnMessage, {\n                  key: 0,\n                  message: message,\n                  \"last-of-several-msgs\": checkIfLastOfSeveralMessages(idx)\n                }, null, 8, [\"message\", \"last-of-several-msgs\"]))\n              : (_openBlock(), _createBlock(OtherMessage, {\n                  key: 1,\n                  message: message,\n                  \"last-of-several-msgs\": checkIfLastOfSeveralMessages(idx)\n                }, null, 8, [\"message\", \"last-of-several-msgs\"]))\n          ], 4))\n        }), 128))\n      ], 512)\n    ], 2),\n    (_unref(voiceMessage).length)\n      ? (_openBlock(), _createBlock(VoiceMessage, {\n          key: 0,\n          class: \"dialog__voice\",\n          \"is-own-message\": true,\n          date: \"12:01:2024 14:15\",\n          \"is-received\": true,\n          \"is-viewed\": true,\n          \"audio-message\": _unref(voiceMessage)[0],\n          onDeleteMessage: _cache[0] || (_cache[0] = ($event: any) => (deleteMessage(0)))\n        }, null, 8, [\"audio-message\"]))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      ref_key: \"$dialogActions\",\n      ref: $dialogActions,\n      class: \"dialog__actions\"\n    }, [\n      _createVNode(ChatInput, {\n        \"input-value\": _unref(messageValue),\n        \"onUpdate:inputValue\": _cache[1] || (_cache[1] = ($event: any) => (_isRef(messageValue) ? (messageValue).value = $event : null)),\n        class: \"dialog__input\",\n        placeholder: \"Напишите сообщение…\",\n        \"add-documents\": true,\n        \"is-making-a-voice-message\": _unref(isMakingAVoiceMessage),\n        \"message-duration\": _unref(messageDuration)\n      }, null, 8, [\"input-value\", \"is-making-a-voice-message\", \"message-duration\"]),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass([\"dialog__send-msg\", {\r\n          'dialog__send-msg_active': _unref(isMakingAVoiceMessage),\r\n        }]),\n        onDblclick: setMessageType,\n        onClick: handleMessage\n      }, [\n        (_unref(messageType) === 'text' || _unref(isMakingAVoiceMessage))\n          ? (_openBlock(), _createBlock(_unref(SendMsgIcon), { key: 0 }))\n          : _createCommentVNode(\"\", true),\n        (_unref(messageType) === 'voice' && !_unref(isMakingAVoiceMessage))\n          ? (_openBlock(), _createBlock(_unref(MicrophoneIcon), { key: 1 }))\n          : _createCommentVNode(\"\", true)\n      ], 34)\n    ], 512),\n    (_unref(isMakingAVoiceMessage))\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          class: \"dialog__voice-bg\",\n          onClick: _cache[2] || (_cache[2] = ($event: any) => (setVoiceMessage(false, true)))\n        }))\n      : _createCommentVNode(\"\", true)\n  ], 2))\n}\n}\n\n})"
        ],
        "mappings": "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",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1709273107291,
      "end": 1709273107291,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709273107292,
      "end": 1709273107292,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709273107293,
      "end": 1709273107293,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709273107293,
      "end": 1709273107293,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { storeToRefs } from 'D:/Work/compas-chat/node_modules/@pinia/nuxt/dist/runtime/composables';\nimport { ref, onMounted, watch } from 'vue';\nimport { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, isRef as _isRef, createVNode as _createVNode } from \"vue\";\nimport { nextTick } from \"vue\";\nimport ChatInput from \"~/components/chat/ui/ChatInput.vue\";\nimport SendMsgIcon from \"~/assets/icons/send-msg-icon.svg\";\nimport MicrophoneIcon from \"~/assets/icons/microphone-icon.svg\";\nimport { useUsersStore } from \"~/store/users\";\nimport OwnMessage from \"~/components/chat/OwnMessage/OwnMessage.vue\";\nimport OtherMessage from \"~/components/chat/OtherMessage/OtherMessage.vue\";\nimport VoiceMessage from \"~/components/chat/VoiceMessage/VoiceMessage.vue\";\nimport { useSettingsStore } from \"~/store/settings\";\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"DialogBody\",\n  setup(__props) {\n    const usersStore = useUsersStore();\n    const { openedChatData, userId, openedChatId } = storeToRefs(usersStore);\n    const settingsStore = useSettingsStore();\n    const { isMobileSize } = storeToRefs(settingsStore);\n    const messageValue = ref();\n    const messageType = ref(\"text\");\n    const setMessageType = () => {\n      clearTimeout(oneClickTimer);\n      clearTimeout(oneClickTimer - 1);\n      if (isMakingAVoiceMessage.value)\n        return;\n      if (messageType.value === \"text\") {\n        messageType.value = \"voice\";\n      } else if (messageType.value === \"voice\") {\n        messageType.value = \"text\";\n      }\n    };\n    const $dialogBody = ref();\n    const $dialogWrapper = ref();\n    const $dialogActions = ref();\n    const isDialogBodyHeightsLessThenVH = ref(true);\n    const scrollToDialogWrapperBottom = () => {\n      $dialogWrapper.value.scrollTop = $dialogWrapper.value.scrollHeight;\n    };\n    const checkIfDialogBodyHeightsLessThenVH = async () => {\n      await nextTick();\n      const dialogBodyHeight = $dialogBody.value.offsetHeight;\n      const dialogWrapperHeight = $dialogWrapper.value.offsetHeight;\n      isDialogBodyHeightsLessThenVH.value = dialogBodyHeight < dialogWrapperHeight;\n    };\n    const isMakingAVoiceMessage = ref(false);\n    const voiceMessage = ref([]);\n    let doNotSaveVoiceMessage = false;\n    const setVoiceMessage = async (isStarted, cleanMessage = false) => {\n      if (cleanMessage) {\n        doNotSaveVoiceMessage = true;\n      }\n      isMakingAVoiceMessage.value = isStarted;\n      await startRecord();\n    };\n    let chunks = [];\n    let mediaRecorder = null;\n    let audioBlob = null;\n    let startTime;\n    const messageDuration = ref(0);\n    let messageIntervalId;\n    async function startRecord() {\n      if (!navigator.mediaDevices && !navigator.mediaDevices.getUserMedia) {\n        return console.warn(\"Not supported\");\n      }\n      if (!mediaRecorder) {\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({\n            audio: true\n          });\n          mediaRecorder = new MediaRecorder(stream);\n          mediaRecorder.start();\n          startTime = (/* @__PURE__ */ new Date()).getTime();\n          mediaRecorder.ondataavailable = (e) => {\n            chunks.push(e.data);\n          };\n          messageIntervalId = setInterval(() => messageDuration.value = ((/* @__PURE__ */ new Date()).getTime() - startTime) / 1e3, 1e3);\n          mediaRecorder.onstop = mediaRecorderStop;\n        } catch (e) {\n          console.error(e);\n        }\n      } else {\n        mediaRecorder.stop();\n        clearInterval(messageIntervalId);\n        messageDuration.value = 0;\n      }\n    }\n    function mediaRecorderStop() {\n      audioBlob = new Blob(chunks, { type: \"audio/mp3\" });\n      const src = URL.createObjectURL(audioBlob);\n      if (doNotSaveVoiceMessage) {\n        voiceMessage.value = [];\n      } else {\n        voiceMessage.value = [src];\n      }\n      mediaRecorder = null;\n      chunks = [];\n    }\n    const sendTextMessage = () => {\n    };\n    let oneClickTimer;\n    const handleMessage = () => {\n      oneClickTimer = setTimeout(() => {\n        if (messageType.value === \"text\") {\n          sendTextMessage();\n        } else if (messageType.value === \"voice\") {\n          if (isMakingAVoiceMessage.value) {\n            setVoiceMessage(false);\n          } else {\n            setVoiceMessage(true);\n          }\n        }\n      }, 300);\n    };\n    onMounted(async () => {\n      await checkIfDialogBodyHeightsLessThenVH();\n      scrollToDialogWrapperBottom();\n    });\n    watch(\n      () => openedChatId.value,\n      async () => {\n        await checkIfDialogBodyHeightsLessThenVH();\n        scrollToDialogWrapperBottom();\n      }\n    );\n    const checkIfLastOfSeveralMessages = (idx) => {\n      const messages = openedChatData.value.messages;\n      if (messages[idx + 1]) {\n        return messages[idx].userId !== messages[idx + 1].userId;\n      } else {\n        return true;\n      }\n    };\n    const deleteMessage = (messageIdx) => {\n      voiceMessage.value = voiceMessage.value.splice(messageIdx, -1);\n    };\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: _normalizeClass([\"dialog\", {\n          \"dialog_mobile\": _unref(isMobileSize)\n        }])\n      }, [\n        _createElementVNode(\"div\", {\n          ref_key: \"$dialogWrapper\",\n          ref: $dialogWrapper,\n          class: _normalizeClass([\"dialog__wrapper\", {\n            \"dialog__wrapper_flex\": _unref(isDialogBodyHeightsLessThenVH)\n          }])\n        }, [\n          _createElementVNode(\"div\", {\n            ref_key: \"$dialogBody\",\n            ref: $dialogBody,\n            class: \"dialog__body\"\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(openedChatData).messages, (message, idx) => {\n              return _openBlock(), _createElementBlock(\"div\", {\n                key: message.id,\n                class: \"dialog__message\",\n                style: _normalizeStyle({\n                  alignSelf: message.userId == _unref(userId) ? \"flex-end\" : \"flex-start\",\n                  marginBottom: _unref(openedChatData).messages.length - 1 === idx && \"5px\"\n                })\n              }, [\n                message.userId === _unref(userId) ? (_openBlock(), _createBlock(OwnMessage, {\n                  key: 0,\n                  message,\n                  \"last-of-several-msgs\": checkIfLastOfSeveralMessages(idx)\n                }, null, 8, [\"message\", \"last-of-several-msgs\"])) : (_openBlock(), _createBlock(OtherMessage, {\n                  key: 1,\n                  message,\n                  \"last-of-several-msgs\": checkIfLastOfSeveralMessages(idx)\n                }, null, 8, [\"message\", \"last-of-several-msgs\"]))\n              ], 4);\n            }), 128))\n          ], 512)\n        ], 2),\n        _unref(voiceMessage).length ? (_openBlock(), _createBlock(VoiceMessage, {\n          key: 0,\n          class: \"dialog__voice\",\n          \"is-own-message\": true,\n          date: \"12:01:2024 14:15\",\n          \"is-received\": true,\n          \"is-viewed\": true,\n          \"audio-message\": _unref(voiceMessage)[0],\n          onDeleteMessage: _cache[0] || (_cache[0] = ($event) => deleteMessage(0))\n        }, null, 8, [\"audio-message\"])) : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", {\n          ref_key: \"$dialogActions\",\n          ref: $dialogActions,\n          class: \"dialog__actions\"\n        }, [\n          _createVNode(ChatInput, {\n            \"input-value\": _unref(messageValue),\n            \"onUpdate:inputValue\": _cache[1] || (_cache[1] = ($event) => _isRef(messageValue) ? messageValue.value = $event : null),\n            class: \"dialog__input\",\n            placeholder: \"Напишите сообщение…\",\n            \"add-documents\": true,\n            \"is-making-a-voice-message\": _unref(isMakingAVoiceMessage),\n            \"message-duration\": _unref(messageDuration)\n          }, null, 8, [\"input-value\", \"is-making-a-voice-message\", \"message-duration\"]),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass([\"dialog__send-msg\", {\n              \"dialog__send-msg_active\": _unref(isMakingAVoiceMessage)\n            }]),\n            onDblclick: setMessageType,\n            onClick: handleMessage\n          }, [\n            _unref(messageType) === \"text\" || _unref(isMakingAVoiceMessage) ? (_openBlock(), _createBlock(_unref(SendMsgIcon), { key: 0 })) : _createCommentVNode(\"\", true),\n            _unref(messageType) === \"voice\" && !_unref(isMakingAVoiceMessage) ? (_openBlock(), _createBlock(_unref(MicrophoneIcon), { key: 1 })) : _createCommentVNode(\"\", true)\n          ], 34)\n        ], 512),\n        _unref(isMakingAVoiceMessage) ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          class: \"dialog__voice-bg\",\n          onClick: _cache[2] || (_cache[2] = ($event) => setVoiceMessage(false, true))\n        })) : _createCommentVNode(\"\", true)\n      ], 2);\n    };\n  }\n});\n",
      "start": 1709273107293,
      "end": 1709273107303,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingsnhrpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChzI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACprE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdpI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxlB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClzzjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdhL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1709273107303,
      "end": 1709273107303,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709273107303,
      "end": 1709273107303,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709273107303,
      "end": 1709273107303,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709273107304,
      "end": 1709273107304,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709273107304,
      "end": 1709273107304,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709273107304,
      "end": 1709273107304,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709273107304,
      "end": 1709273107305,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709273107305,
      "end": 1709273107305,
      "order": "normal"
    }
  ]
}
